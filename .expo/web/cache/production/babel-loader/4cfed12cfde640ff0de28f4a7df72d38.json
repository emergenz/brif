{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.TabContext=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Pressable=require(\"../../primitives/Pressable\");var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _Context=require(\"./Context\");var _utils=require(\"../../../theme/tools/utils\");var _tabs=require(\"@react-native-aria/tabs\");var _interactions=require(\"@react-native-aria/interactions\");var _utils2=require(\"../../../utils\");var _lodash=_interopRequireDefault(require(\"lodash.merge\"));var _theme=require(\"../../../theme\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Tabs/Tab.tsx\";var TabContext=(0,_react.createContext)({});exports.TabContext=TabContext;var Tab=function Tab(_ref2,ref){var children=_ref2.children,isDisabled=_ref2.isDisabled,style=_ref2.style,_active=_ref2._active,_disabled=_ref2._disabled,item=_ref2.item,props=(0,_objectWithoutProperties2.default)(_ref2,[\"children\",\"isDisabled\",\"style\",\"_active\",\"_disabled\",\"item\"]);var newProps=(0,_utils.omitUndefined)(props);var _React$useContext=_react.default.useContext(_Context.TabsContext),inactiveTabStyle=_React$useContext.inactiveTabStyle,activeTabStyle=_React$useContext.activeTabStyle,state=_React$useContext.state,isFitted=_React$useContext.isFitted;var tabRef=_react.default.useRef(null);var _ref=_react.default.useRef(null);var _useHover=(0,_interactions.useHover)({},_ref),isHovered=_useHover.isHovered;var isSelected=state.selectedKey===item.key;var _useTab=(0,_tabs.useTab)({item:item,isDisabled:isDisabled},state,tabRef),tabProps=_useTab.tabProps;_react.default.useEffect(function(){if(isDisabled){state.disabledKeys.add(item.key);}else{state.disabledKeys.delete(item.key);}},[isDisabled,item.key,state.disabledKeys]);var tabStyle=isSelected?activeTabStyle:inactiveTabStyle;var _hover=tabStyle._hover,remainingTabStyle=(0,_objectWithoutProperties2.default)(tabStyle,[\"_hover\"]);var mergedProps=(0,_lodash.default)(remainingTabStyle,newProps);var _themeTools$extractIn=_theme.themeTools.extractInObject(mergedProps,['margin','m','marginTop','mt','marginRight','mr','marginBottom','mb','marginLeft','ml','marginX','mx','marginY','my']),_themeTools$extractIn2=(0,_slicedToArray2.default)(_themeTools$extractIn,2),marginalProps=_themeTools$extractIn2[0],remainingProps=_themeTools$extractIn2[1];if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(TabContext.Provider,{value:{isSelected:isSelected},__self:_this,__source:{fileName:_jsxFileName,lineNumber:78,columnNumber:5}},_react.default.createElement(_Pressable.Pressable,(0,_extends2.default)({disabled:isDisabled,ref:(0,_utils2.mergeRefs)([tabRef,_ref,ref]),flex:isFitted?1:undefined},tabProps,marginalProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:83,columnNumber:7}}),_react.default.createElement(_Box.default,(0,_extends2.default)({},remainingProps,isHovered&&_hover,{style:[style,isSelected&&_active,isDisabled&&_disabled],__self:_this,__source:{fileName:_jsxFileName,lineNumber:90,columnNumber:9}}),children)));};var _default=_react.default.memo(_react.default.forwardRef(Tab));exports.default=_default;","map":{"version":3,"sources":["Tab.tsx"],"names":["TabContext","Tab","children","isDisabled","style","_active","_disabled","item","props","newProps","inactiveTabStyle","activeTabStyle","state","isFitted","React","TabsContext","tabRef","_ref","isHovered","isSelected","tabProps","tabStyle","_hover","remainingTabStyle","mergedProps","marginalProps","remainingProps","themeTools"],"mappings":"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","sourcesContent":["import React, { createContext } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport Box from '../../primitives/Box';\nimport { TabsContext } from './Context';\nimport type { ITabProps, ITabsContextProps } from './types';\nimport { omitUndefined } from '../../../theme/tools/utils';\nimport { useTab } from '@react-native-aria/tabs';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport merge from 'lodash.merge';\nimport { themeTools } from '../../../theme';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const TabContext = createContext({});\n\nconst Tab = (\n  {\n    children,\n    isDisabled,\n    style,\n    _active,\n    _disabled,\n    item,\n    ...props\n  }: ITabProps,\n  ref?: any\n) => {\n  const newProps = omitUndefined(props);\n\n  const {\n    inactiveTabStyle,\n    activeTabStyle,\n    state,\n    isFitted,\n  }: ITabsContextProps = React.useContext(TabsContext);\n  let tabRef = React.useRef<any>(null);\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  let isSelected = state.selectedKey === item.key;\n\n  let { tabProps } = useTab({ item, isDisabled }, state, tabRef);\n\n  React.useEffect(() => {\n    if (isDisabled) {\n      state.disabledKeys.add(item.key);\n    } else {\n      state.disabledKeys.delete(item.key);\n    }\n  }, [isDisabled, item.key, state.disabledKeys]);\n\n  const tabStyle = isSelected ? activeTabStyle : inactiveTabStyle;\n  const { _hover, ...remainingTabStyle } = tabStyle;\n  const mergedProps = merge(remainingTabStyle, newProps);\n  const [\n    marginalProps,\n    remainingProps,\n  ] = themeTools.extractInObject(mergedProps, [\n    'margin',\n    'm',\n    'marginTop',\n    'mt',\n    'marginRight',\n    'mr',\n    'marginBottom',\n    'mb',\n    'marginLeft',\n    'ml',\n    'marginX',\n    'mx',\n    'marginY',\n    'my',\n  ]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <TabContext.Provider\n      value={{\n        isSelected,\n      }}\n    >\n      <Pressable\n        disabled={isDisabled}\n        ref={mergeRefs([tabRef, _ref, ref])}\n        flex={isFitted ? 1 : undefined}\n        {...tabProps}\n        {...marginalProps}\n      >\n        <Box\n          {...remainingProps}\n          {...(isHovered && _hover)}\n          style={[style, isSelected && _active, isDisabled && _disabled]}\n        >\n          {children}\n        </Box>\n      </Pressable>\n    </TabContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Tab));\n"]},"metadata":{},"sourceType":"script"}