{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _primitives=require(\"../../primitives\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Avatar/Avatar.tsx\";var Avatar=function Avatar(_ref,ref){var children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\"]);var _React$useState=_react.default.useState(false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),error=_React$useState2[0],setError=_React$useState2[1];var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Avatar',props),_text=_usePropsResolution._text,source=_usePropsResolution.source,style=_usePropsResolution.style,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"_text\",\"source\",\"style\"]);var Badge=_react.default.createElement(_react.default.Fragment,null);var remainingChildren=[];_react.default.Children.map(children,function(child,key){if(typeof(child==null?void 0:child.type)==='object'&&(child==null?void 0:child.type.displayName)==='AvatarBadge'){Badge=child;}else{remainingChildren.push(typeof child==='string'||typeof child==='number'?_react.default.createElement(_primitives.Text,(0,_extends2.default)({key:'avatar-children-'+key},_text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:26,columnNumber:11}}),child):child);}});var imageFitStyle={height:'100%',width:'100%'};if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_primitives.Box,(0,_extends2.default)({},resolvedProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:42,columnNumber:5}}),source&&!error?_react.default.createElement(_primitives.Image,{borderRadius:resolvedProps.borderRadius,source:source,alt:'--',_alt:_text,style:[style,imageFitStyle],onError:function onError(){setError(true);},ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:44,columnNumber:9}}):remainingChildren.length!==0&&remainingChildren,Badge);};var _default=(0,_react.memo)((0,_react.forwardRef)(Avatar));exports.default=_default;","map":{"version":3,"sources":["Avatar.tsx"],"names":["Avatar","children","props","error","setError","React","_text","source","style","resolvedProps","Badge","remainingChildren","child","imageFitStyle","height","width"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, Image, Text } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Avatar = ({ children, ...props }: IAvatarProps, ref: any) => {\n  const [error, setError] = React.useState(false);\n  const { _text, source, style, ...resolvedProps } = usePropsResolution(\n    'Avatar',\n    props\n  );\n\n  let Badge = <></>;\n  const remainingChildren: JSX.Element[] = [];\n  //  Pop Badge from children\n  React.Children.map(children, (child, key) => {\n    if (\n      typeof child?.type === 'object' &&\n      child?.type.displayName === 'AvatarBadge'\n    ) {\n      Badge = child;\n    } else {\n      remainingChildren.push(\n        typeof child === 'string' || typeof child === 'number' ? (\n          <Text key={'avatar-children-' + key} {..._text}>\n            {child}\n          </Text>\n        ) : (\n          child\n        )\n      );\n    }\n  });\n\n  const imageFitStyle: any = { height: '100%', width: '100%' };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps}>\n      {source && !error ? (\n        <Image\n          borderRadius={resolvedProps.borderRadius}\n          source={source}\n          alt={'--'}\n          _alt={_text}\n          style={[style, imageFitStyle]}\n          onError={() => {\n            setError(true);\n          }}\n          ref={ref}\n        />\n      ) : (\n        remainingChildren.length !== 0 && remainingChildren\n      )}\n      {Badge}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Avatar));\n"]},"metadata":{},"sourceType":"script"}