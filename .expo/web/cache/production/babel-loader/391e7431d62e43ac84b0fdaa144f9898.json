{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Box=_interopRequireDefault(require(\"../Box\"));var _Text=_interopRequireDefault(require(\"../Text\"));var _hooks=require(\"../../../hooks\");var _useLink2=require(\"./useLink\");var _utils=require(\"../../../utils\");var _Pressable=require(\"../Pressable\");var _interactions=require(\"@react-native-aria/interactions\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Link/index.tsx\";var Link=function Link(props,ref){var _ref=_react.default.useRef(null);var _useHover=(0,_interactions.useHover)({},_ref),isHovered=_useHover.isHovered;var _usePropsResolution=(0,_hooks.usePropsResolution)('Link',props,{isHovered:isHovered}),isUnderlined=_usePropsResolution.isUnderlined,children=_usePropsResolution.children,_text=_usePropsResolution._text,href=_usePropsResolution.href,onPress=_usePropsResolution.onPress,isExternal=_usePropsResolution.isExternal,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"isUnderlined\",\"children\",\"_text\",\"href\",\"onPress\",\"isExternal\"]);var _useLink=(0,_useLink2.useLink)({href:href,onPress:onPress,isExternal:isExternal,_ref:_ref}),linkProps=_useLink.linkProps;var linkTextProps=(0,_extends2.default)({textDecorationLine:isUnderlined?'underline':'none'},_text);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_react.default.Fragment,null,_reactNative.Platform.OS==='web'?_react.default.createElement(_Box.default,(0,_extends2.default)({},linkProps,resolvedProps,{_text:linkTextProps,ref:(0,_utils.mergeRefs)([ref,_ref]),flexDirection:\"row\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:48,columnNumber:9}}),children):_react.default.createElement(_Pressable.Pressable,(0,_extends2.default)({},linkProps,resolvedProps,{ref:ref,flexDirection:\"row\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:58,columnNumber:9}}),_react.default.Children.map(children,function(child){return typeof child==='string'||typeof child==='number'?_react.default.createElement(_Text.default,(0,_extends2.default)({},resolvedProps._text,linkTextProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:66,columnNumber:15}}),child):child;})));};var _default=(0,_react.memo)((0,_react.forwardRef)(Link));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["Link","_ref","React","isHovered","isUnderlined","children","_text","href","onPress","isExternal","resolvedProps","linkProps","linkTextProps","textDecorationLine","Platform"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport type { ILinkProps } from './types';\nimport Box from '../Box';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks';\nimport { useLink } from './useLink';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Link = (props: ILinkProps, ref: any) => {\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  const {\n    isUnderlined,\n    children,\n    _text,\n    href,\n    onPress,\n    isExternal,\n    ...resolvedProps\n  } = usePropsResolution('Link', props, { isHovered });\n  const { linkProps } = useLink({ href, onPress, isExternal, _ref });\n\n  const linkTextProps = {\n    textDecorationLine: isUnderlined ? 'underline' : 'none',\n    ..._text,\n  };\n  // function getHoverProps() {\n  //   let hoverTextProps = {\n  //     ...linkTextProps,\n  //     ..._hover?._text,\n  //   };\n  //   return {\n  //     ...hoverTextProps,\n  //   };\n  // }\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {/* On web we render Link in anchor tag */}\n      {Platform.OS === 'web' ? (\n        <Box\n          {...linkProps}\n          {...resolvedProps}\n          _text={linkTextProps}\n          ref={mergeRefs([ref, _ref])}\n          flexDirection=\"row\"\n        >\n          {children}\n        </Box>\n      ) : (\n        <Pressable\n          {...linkProps}\n          {...resolvedProps}\n          ref={ref}\n          flexDirection=\"row\"\n        >\n          {React.Children.map(children, (child) =>\n            typeof child === 'string' || typeof child === 'number' ? (\n              <Text {...resolvedProps._text} {...linkTextProps}>\n                {child}\n              </Text>\n            ) : (\n              child\n            )\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n};\n\nexport default memo(forwardRef(Link));\nexport type { ILinkProps };\n"]},"metadata":{},"sourceType":"script"}