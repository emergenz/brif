{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.extendTheme=extendTheme;var _theme=require(\"./../theme\");var _lodash=_interopRequireDefault(require(\"lodash.mergewith\"));function isFunction(value){return typeof value==='function';}function extendTheme(overrides){function customizer(source,override){if(isFunction(source)){return function(){var sourceValue=source.apply(void 0,arguments);var overrideValue=isFunction(override)?override.apply(void 0,arguments):override;return(0,_lodash.default)({},sourceValue,overrideValue,customizer);};}return undefined;}for(var _len=arguments.length,restOverrides=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){restOverrides[_key-1]=arguments[_key];}var finalOverrides=[overrides].concat(restOverrides).reduce(function(prevValue,currentValue){return(0,_lodash.default)({},prevValue,currentValue,customizer);},_theme.theme);return finalOverrides;}","map":{"version":3,"sources":["extendTheme.tsx"],"names":["restOverrides","isFunction","sourceValue","source","overrideValue","override","finalOverrides","defaultTheme"],"mappings":"4KAAA,GAAA,CAAA,MAAA,CAAA,OAAA,cAAA,CACA,GAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA,CAEA,QAAA,CAAA,UAAA,CAAA,KAAA,CAAyC,CACvC,MAAO,OAAA,CAAA,KAAA,GAAP,UAAA,CAKK,SAAA,CAAA,WAAA,CAAA,SAAA,CAGL,CACA,QAAA,CAAA,UAAA,CAAA,MAAA,CAAA,QAAA,CAAgD,CAC9C,GAAIC,UAAU,CAAd,MAAc,CAAd,CAAwB,CACtB,MAAO,WAAoB,CACzB,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAANA,KAAAA,CAAAA,IAAAA,EAAAA,CAApB,SAAoBA,CAApB,CACA,GAAMC,CAAAA,aAAa,CAAGH,UAAU,CAAVA,QAAU,CAAVA,CAClBI,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAAA,CADkBJ,SAClBI,CADkBJ,CAAtB,QAAA,CAGA,MAAO,CAAA,EAAA,OAAA,CAAA,OAAA,EAAA,EAAA,CAAA,WAAA,CAAA,aAAA,CAAP,UAAO,CAAP,CALF,CAAA,CAQF,OAAA,CAAA,SAAA,CAXF,KAAA,GAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CADGD,aACH,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CADGA,aACH,CAAA,IAAA,CAAA,CAAA,CADGA,CACH,SAAA,CAAA,IAAA,CADGA,CAeH,IAAMM,CAAAA,cAAc,CAAG,CAAA,SAAA,EAAA,MAAA,CAAA,aAAA,EAAA,MAAA,CACrB,SAAA,SAAA,CAAA,YAAA,CAA6B,CAC3B,MAAO,CAAA,EAAA,OAAA,CAAA,OAAA,EAAA,EAAA,CAAA,SAAA,CAAA,YAAA,CAAP,UAAO,CAAP,CAFmB,CAAA,CAIrBC,MAAAA,CAJF,KAAuB,CAAvB,CAOA,MAAA,CAAA,cAAA,CACD","sourcesContent":["import { theme as defaultTheme, Theme } from './../theme';\nimport mergeWith from 'lodash.mergewith';\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\ntype ThemeUtil = Theme | (Record<string, any> & {});\n\nexport function extendTheme<T extends ThemeUtil>(\n  overrides: T,\n  ...restOverrides: T[]\n) {\n  function customizer(source: any, override: any) {\n    if (isFunction(source)) {\n      return (...args: any[]) => {\n        const sourceValue = source(...args);\n        const overrideValue = isFunction(override)\n          ? override(...args)\n          : override;\n        return mergeWith({}, sourceValue, overrideValue, customizer);\n      };\n    }\n    return undefined;\n  }\n\n  const finalOverrides = [overrides, ...restOverrides].reduce(\n    (prevValue, currentValue) => {\n      return mergeWith({}, prevValue, currentValue, customizer);\n    },\n    defaultTheme\n  );\n\n  return finalOverrides as T & Theme;\n}\n"]},"metadata":{},"sourceType":"script"}