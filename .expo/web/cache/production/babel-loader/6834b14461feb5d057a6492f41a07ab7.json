{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _Stack=require(\"../../primitives/Stack\");var _Context=require(\"./Context\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Breadcrumb/BreadcrumbItem.tsx\";var BreadcrumbItem=function BreadcrumbItem(props,ref){var children=props.children,isCurrent=props.isCurrent,_text=props._text,remainingProps=(0,_objectWithoutProperties2.default)(props,[\"children\",\"isCurrent\",\"_text\"]);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Context.BreadcrumbItemContext.Provider,{value:{isCurrent:isCurrent},__self:_this,__source:{fileName:_jsxFileName,lineNumber:16,columnNumber:5}},_react.default.createElement(_Stack.HStack,(0,_extends2.default)({},remainingProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:17,columnNumber:7}}),_react.default.Children.map(children,function(child,index){return _react.default.cloneElement(child,(0,_extends2.default)({'key':\"breadcrumb-item-\"+index,'_text':(0,_extends2.default)({},_text,{fontWeight:700})},{isUnderlined:false},remainingProps,{'aria-current':_reactNative.Platform.OS==='web'&&isCurrent?'page':undefined}));})));};var _default=(0,_react.memo)((0,_react.forwardRef)(BreadcrumbItem));exports.default=_default;","map":{"version":3,"sources":["BreadcrumbItem.tsx"],"names":["BreadcrumbItem","children","isCurrent","_text","remainingProps","props","React","fontWeight","isUnderlined","Platform"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,MAAA,CAAA,OAAA,0BAAA,CACA,GAAA,CAAA,QAAA,CAAA,OAAA,aAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,+IAEA,GAAMA,CAAAA,cAAc,CAAdA,QAAAA,CAAAA,cAAAA,CAAiB,KAAjBA,CAAiB,GAAjBA,CAA6D,CAAA,GACzDC,CAAAA,QADyD,CACPI,KADO,CAAA,QAAA,CAC/CH,SAD+C,CACPG,KADO,CAAA,SAAA,CACpCF,KADoC,CACPE,KADO,CAAA,KAAA,CAC1BD,cAD0B,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,UAAA,CAAA,WAAA,CAAA,OAAA,CAAA,CAAA,CAGjE,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OAEE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAD,qBAAC,CAAD,QAAA,CAAA,CAAgC,KAAK,CAAE,CAAEF,SAAS,CAAlD,SAAuC,CAAvC,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,cAAA,CAAA,CAA4B,GAAG,CAA/B,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACGI,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,CAA6B,SAAA,KAAA,CAAA,KAAA,CAAA,CAAA,MAC5BA,CAAAA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,CACE,MAAA,mBADFA,KAAAA,CAEE,QAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,KAAA,CAAA,CAEEC,UAAU,CAJdD,GAEE,CAAA,CAFFA,CAAAA,CAMK,CACDE,YAAY,CAPhBF,KAMK,CANLA,CAAAA,cAAAA,CAAAA,CAUE,eACEG,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,EAAAA,SAAAA,CAAAA,MAAAA,CAZwB,SAC5BH,CAAAA,CAAAA,CAD4B,CAJpC,CAIOA,CADH,CADF,CAFF,CANF,CAAA,C,aA8Be,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,cAAK,CAAL,C","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { BreadcrumbItemContext } from './Context';\nimport type { IBreadcrumbItemProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst BreadcrumbItem = (props: IBreadcrumbItemProps, ref?: any) => {\n  const { children, isCurrent, _text, ...remainingProps } = props;\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    // Provider wrapped to use isCurrent prop in children of breadcrumb Item\n    <BreadcrumbItemContext.Provider value={{ isCurrent }}>\n      <HStack {...remainingProps} ref={ref}>\n        {React.Children.map(children, (child: any, index: number) =>\n          React.cloneElement(child, {\n            'key': `breadcrumb-item-${index}`,\n            '_text': {\n              ..._text, //taken out empty _text prop from props\n              fontWeight: 700,\n            },\n            ...{\n              isUnderlined: false,\n            },\n            ...remainingProps,\n            'aria-current':\n              Platform.OS === 'web' && isCurrent ? 'page' : undefined,\n          })\n        )}\n      </HStack>\n    </BreadcrumbItemContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbItem));\n"]},"metadata":{},"sourceType":"script"}