{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _hooks=require(\"../../../hooks\");var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _PopoverContext=require(\"./PopoverContext\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Popover/PopoverHeader.tsx\";var PopoverHeader=function PopoverHeader(props,ref){var resolvedProps=(0,_hooks.usePropsResolution)('PopoverHeader',props);var _React$useContext=_react.default.useContext(_PopoverContext.PopoverContext),setHeaderMounted=_React$useContext.setHeaderMounted,headerId=_React$useContext.headerId;_react.default.useEffect(function(){setHeaderMounted(true);return function(){setHeaderMounted(false);};},[setHeaderMounted]);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Box.default,(0,_extends2.default)({accessibilityRole:_reactNative.Platform.OS==='web'?'banner':undefined,nativeID:headerId},resolvedProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:5}}));};var _default=(0,_react.memo)((0,_react.forwardRef)(PopoverHeader));exports.default=_default;","map":{"version":3,"sources":["PopoverHeader.tsx"],"names":["PopoverHeader","resolvedProps","setHeaderMounted","headerId","React","PopoverContext","Platform"],"mappings":"wUAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,CACA,GAAA,CAAA,eAAA,CAAA,OAAA,oBAAA,CACA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,2IAEA,GAAMA,CAAAA,aAAa,CAAbA,QAAAA,CAAAA,aAAAA,CAAgB,KAAhBA,CAAgB,GAAhBA,CAAiD,CACrD,GAAMC,CAAAA,aAAa,CAAG,CAAA,EAAA,MAAA,CAAA,kBAAA,EAAA,eAAA,CAAtB,KAAsB,CAAtB,CADqD,GAAA,CAAA,iBAAA,CAEdG,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,eAAAA,CAFH,cAEdD,CAFc,CAE7CF,gBAF6C,CAAA,iBAAA,CAAA,gBAAA,CAE3BC,QAF2B,CAAA,iBAAA,CAAA,QAAA,CAIrDC,MAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAgB,UAAM,CACpBF,gBAAgB,CAAhBA,IAAgB,CAAhBA,CACA,MAAO,WAAM,CACXA,gBAAgB,CAAhBA,KAAgB,CAAhBA,CADF,CAAA,CAFFE,CAAAA,CAKG,CALHA,gBAKG,CALHA,EAOA,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CAEE,iBAAiB,CAAEE,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAAAA,QAAAA,CAFrB,SAAA,CAGE,QAAQ,CAHV,QAAA,CAAA,CAAA,aAAA,CAAA,CAKE,GAAG,CALL,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CADF,CACE,CAAA,CAAA,CAAA,CADF,CAdF,CAAA,C,aAyBe,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,aAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = React.useContext(PopoverContext);\n\n  React.useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      //@ts-ignore\n      accessibilityRole={Platform.OS === 'web' ? 'banner' : undefined}\n      nativeID={headerId}\n      {...resolvedProps}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]},"metadata":{},"sourceType":"script"}