{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _hooks=require(\"../../../hooks\");var _reactNative=require(\"react-native-web/dist/index\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Modal/ModalBody.tsx\";var ModalBody=function ModalBody(_ref,ref){var children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\"]);var resolvedProps=(0,_hooks.usePropsResolution)('ModalBody',props);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_reactNative.ScrollView,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:14,columnNumber:5}},_react.default.createElement(_Box.default,(0,_extends2.default)({},resolvedProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:15,columnNumber:7}}),children));};var _default=(0,_react.memo)((0,_react.forwardRef)(ModalBody));exports.default=_default;","map":{"version":3,"sources":["ModalBody.tsx"],"names":["ModalBody","children","props","resolvedProps"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,C,wDAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,qIAEA,GAAMA,CAAAA,SAAS,CAATA,QAAAA,CAAAA,SAAAA,CAAY,IAAZA,CAAY,GAAZA,CAA8D,CAA/CC,GAAAA,CAAAA,QAA+C,CAAA,IAAA,CAA/CA,QAAAA,CAAaC,KAAkC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,UAAA,CAAA,CAA/CD,CACnB,GAAME,CAAAA,aAAa,CAAG,CAAA,EAAA,MAAA,CAAA,kBAAA,EAAA,WAAA,CAAtB,KAAsB,CAAtB,CAEA,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,aAAA,CAAA,CAAwB,GAAG,CAA3B,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAFJ,QAEI,CADF,CADF,CANF,CAAA,C,aAee,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,SAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { ScrollView } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalBody = ({ children, ...props }: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ModalBody', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]},"metadata":{},"sourceType":"script"}