{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireDefault(require(\"react\"));var _Context=require(\"./Context\");var _reactNative=require(\"react-native-web/dist/index\");var _Box=_interopRequireDefault(require(\"../Box\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Slider/SliderFilledTrack.tsx\";var SliderFilledTrack=function SliderFilledTrack(_ref,ref){var style=_ref.style,props=(0,_objectWithoutProperties2.default)(_ref,[\"style\"]);var _React$useContext=_react.default.useContext(_Context.SliderContext),isReversed=_React$useContext.isReversed,colorScheme=_React$useContext.colorScheme,state=_React$useContext.state,trackLayout=_React$useContext.trackLayout,orientation=_React$useContext.orientation,isDisabled=_React$useContext.isDisabled,sliderSize=_React$useContext.sliderSize,isReadOnly=_React$useContext.isReadOnly;var sliderTrackPosition=isReversed?orientation==='vertical'?trackLayout.height-trackLayout.height*state.getThumbPercent(0):trackLayout.width-trackLayout.width*state.getThumbPercent(0):state.getThumbPercent(0)*100+'%';var resolvedProps=(0,_useThemeProps.usePropsResolution)('SliderFilledTrack',(0,_extends2.default)({size:sliderSize,colorScheme:colorScheme},props),{isDisabled:isDisabled,isReadOnly:isReadOnly});var customStyle=_reactNative.StyleSheet.create({verticalStyle:{height:sliderTrackPosition,width:sliderSize},horizontalStyle:{width:sliderTrackPosition,height:sliderSize}});if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Box.default,(0,_extends2.default)({position:\"absolute\"},resolvedProps,{left:orientation!=='vertical'&&!isReversed?0:undefined,bottom:orientation==='vertical'&&!isReversed?0:undefined,right:orientation!=='vertical'&&isReversed?0:undefined,top:orientation==='vertical'&&isReversed?0:undefined,style:[style,orientation==='vertical'?customStyle.verticalStyle:customStyle.horizontalStyle],ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:56,columnNumber:5}}));};var _default=_react.default.forwardRef(SliderFilledTrack);exports.default=_default;","map":{"version":3,"sources":["SliderFilledTrack.tsx"],"names":["SliderFilledTrack","style","props","isReversed","colorScheme","state","trackLayout","orientation","isDisabled","sliderSize","isReadOnly","React","SliderContext","sliderTrackPosition","resolvedProps","size","customStyle","StyleSheet","verticalStyle","height","width","horizontalStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SliderContext } from './Context';\nimport { StyleSheet } from 'react-native';\nimport Box from '../Box';\nimport type { ISliderTrackFilledProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SliderFilledTrack = (\n  { style, ...props }: ISliderTrackFilledProps,\n  ref?: any\n) => {\n  const {\n    isReversed,\n    colorScheme,\n    state,\n    trackLayout,\n    orientation,\n    isDisabled,\n    sliderSize,\n    isReadOnly,\n  } = React.useContext(SliderContext);\n\n  const sliderTrackPosition = isReversed\n    ? orientation === 'vertical'\n      ? trackLayout.height - trackLayout.height * state.getThumbPercent(0)\n      : trackLayout.width - trackLayout.width * state.getThumbPercent(0)\n    : state.getThumbPercent(0) * 100 + '%';\n\n  const resolvedProps = usePropsResolution(\n    'SliderFilledTrack',\n    {\n      size: sliderSize,\n      colorScheme,\n      ...props,\n    },\n    { isDisabled, isReadOnly }\n  );\n  // NOTE: Required for WEB compatibility\n  const customStyle = StyleSheet.create({\n    verticalStyle: {\n      height: sliderTrackPosition,\n      width: sliderSize,\n    },\n    horizontalStyle: {\n      width: sliderTrackPosition,\n      height: sliderSize,\n    },\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...resolvedProps}\n      left={orientation !== 'vertical' && !isReversed ? 0 : undefined}\n      bottom={orientation === 'vertical' && !isReversed ? 0 : undefined}\n      right={orientation !== 'vertical' && isReversed ? 0 : undefined}\n      top={orientation === 'vertical' && isReversed ? 0 : undefined}\n      style={[\n        style,\n        orientation === 'vertical'\n          ? customStyle.verticalStyle\n          : customStyle.horizontalStyle,\n      ]}\n      ref={ref}\n      // {...(isReadOnly && _readOnly)}\n      // {...(isDisabled && _disabled)}\n    />\n  );\n};\n\nexport default React.forwardRef(SliderFilledTrack);\n"]},"metadata":{},"sourceType":"script"}