{"ast":null,"code":"import{useId,useLabels,mergeProps,useSlotId}from\"@react-aria/utils\";export function useLabel(props){var id=props.id,label=props.label,ariaLabelledby=props['aria-labelledby'],ariaLabel=props['aria-label'],_props$labelElementTy=props.labelElementType,labelElementType=_props$labelElementTy===void 0?'label':_props$labelElementTy;id=useId(id);var labelId=useId();var labelProps={};if(label){ariaLabelledby=ariaLabelledby?ariaLabelledby+\" \"+labelId:labelId;labelProps={id:labelId,htmlFor:labelElementType==='label'?id:undefined};}else if(!ariaLabelledby&&!ariaLabel){console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');}var fieldProps=useLabels({id:id,'aria-label':ariaLabel,'aria-labelledby':ariaLabelledby});return{labelProps:labelProps,fieldProps:fieldProps};}export function useField(props){var description=props.description,errorMessage=props.errorMessage;var _useLabel=useLabel(props),labelProps=_useLabel.labelProps,fieldProps=_useLabel.fieldProps;var descriptionId=useSlotId();var errorMessageId=useSlotId();fieldProps=mergeProps(fieldProps,{'aria-describedby':[descriptionId,errorMessageId,props['aria-describedby']].filter(Boolean).join(' ')||undefined});var descriptionProps={};var errorMessageProps={};if(description){descriptionProps.id=descriptionId;}if(errorMessage){errorMessageProps.id=errorMessageId;}return{labelProps:labelProps,fieldProps:fieldProps,descriptionProps:descriptionProps,errorMessageProps:errorMessageProps};}","map":{"version":3,"sources":["packages/@react-aria/label/src/useLabel.ts","packages/@react-aria/label/src/useField.ts"],"names":["labelElementType","id","useId","labelId","labelProps","ariaLabelledby","htmlFor","undefined","console","fieldProps","useLabels","errorMessage","descriptionId","useSlotId","errorMessageId","mergeProps","props","descriptionProps","errorMessageProps"],"mappings":"0EAoCO,SAAA,CAAA,QAAA,CAAA,KAAA,CAAoD,CACzD,GAAI,CAAA,EAAJ,CAAA,KAAA,CAAI,EAAJ,CAAI,KAAJ,CAAA,KAAA,CAAI,KAAJ,CAAI,cAAJ,CAAA,KAAA,CAGE,iBAHF,EAAI,SAAJ,CAAA,KAAA,CAIE,YAJF,wBAAA,KAAA,CAKEA,gBALF,CAKEA,gBALF,gCAKqB,OALrB,uBAQAC,EAAE,CAAGC,KAAK,CAAVD,EAAU,CAAVA,CACA,GAAIE,CAAAA,OAAO,CAAGD,KAAd,EAAA,CACA,GAAIE,CAAAA,UAAU,CAAd,EAAA,CACA,GAAA,KAAA,CAAW,CACTC,cAAc,CAAGA,cAAc,CAAMA,cAAN,CAAA,GAAMA,CAAN,OAAA,CAA/BA,OAAAA,CACAD,UAAU,CAAG,CACXH,EAAE,CADS,OAAA,CAEXK,OAAO,CAAEN,gBAAgB,GAAhBA,OAAAA,CAAAA,EAAAA,CAAoCO,SAFlC,CAAbH,CAFF,CAAA,IAMO,IAAI,CAAA,cAAA,EAAmB,CAAvB,SAAA,CAAmC,CACxCI,OAAO,CAAPA,IAAAA,CAAAA,sHAAAA,EACD,CAED,GAAIC,CAAAA,UAAU,CAAGC,SAAS,CAAC,CACzBT,EADyB,CACzBA,EADyB,CAEzB,aAFyB,SAAA,CAGzB,kBAAmBI,cAHM,CAAD,CAA1B,CAMA,MAAO,CACLD,UADK,CACLA,UADK,CAELK,UAAAA,CAAAA,UAFK,CAAP,CAID,C,MCrCM,SAAA,CAAA,QAAA,CAAA,KAAA,CAAoD,CACzD,GAAI,CAAA,WAAJ,CAAA,KAAA,CAAI,WAAJ,CAAkBE,YAAlB,CAAA,KAAA,CAAkBA,YAAlB,CACA,cAA+B,QAAA,CAA/B,KAA+B,CAA/B,CAAI,UAAJ,WAAI,UAAJ,CAAiBF,UAAjB,WAAiBA,UAAjB,CAEA,GAAIG,CAAAA,aAAa,CAAGC,SAApB,EAAA,CACA,GAAIC,CAAAA,cAAc,CAAGD,SAArB,EAAA,CAEAJ,UAAU,CAAGM,UAAU,CAAA,UAAA,CAAa,CAClC,mBAAoB,CAAA,aAAA,CAAA,cAAA,CAIlBC,KAAK,CAJa,kBAIb,CAJa,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAAA,GAAA,GAKWT,SANG,CAAb,CAAvBE,CASA,GAAIQ,CAAAA,gBAA6C,CAAjD,EAAA,CACA,GAAIC,CAAAA,iBAA8C,CAAlD,EAAA,CACA,GAAA,WAAA,CAAiB,CACfD,gBAAgB,CAAhBA,EAAAA,CAAAA,aAAAA,CACD,CACD,GAAA,YAAA,CAAkB,CAChBC,iBAAiB,CAAjBA,EAAAA,CAAAA,cAAAA,CACD,CAED,MAAO,CACLd,UADK,CACLA,UADK,CAELK,UAFK,CAELA,UAFK,CAGLQ,gBAHK,CAGLA,gBAHK,CAILC,iBAAAA,CAAAA,iBAJK,CAAP,CAMD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, LabelableProps} from '@react-types/shared';\nimport {ElementType, LabelHTMLAttributes} from 'react';\nimport {useId, useLabels} from '@react-aria/utils';\n\nexport interface LabelAriaProps extends LabelableProps, DOMProps, AriaLabelingProps {\n  /**\n   * The HTML element used to render the label, e.g. 'label', or 'span'.\n   * @default 'label'\n   */\n  labelElementType?: ElementType\n}\n\nexport interface LabelAria {\n  /** Props to apply to the label container element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props to apply to the field container element being labeled. */\n  fieldProps: AriaLabelingProps & DOMProps\n}\n\n/**\n * Provides the accessibility implementation for labels and their associated elements.\n * Labels provide context for user inputs.\n * @param props - The props for labels and fields.\n */\nexport function useLabel(props: LabelAriaProps): LabelAria {\n  let {\n    id,\n    label,\n    'aria-labelledby': ariaLabelledby,\n    'aria-label': ariaLabel,\n    labelElementType = 'label'\n  } = props;\n\n  id = useId(id);\n  let labelId = useId();\n  let labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${ariaLabelledby} ${labelId}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) {\n    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  let fieldProps = useLabels({\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n\n  return {\n    labelProps,\n    fieldProps\n  };\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HelpTextProps} from '@react-types/shared';\nimport {HTMLAttributes} from 'react';\nimport {LabelAria, LabelAriaProps, useLabel} from './useLabel';\nimport {mergeProps, useSlotId} from '@react-aria/utils';\n\ninterface AriaFieldProps extends LabelAriaProps, HelpTextProps {}\n\nexport interface FieldAria extends LabelAria {\n  /** Props for the description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for input fields.\n * Fields accept user input, gain context from their label, and may display a description or error message.\n * @param props - Props for the Field.\n */\nexport function useField(props: AriaFieldProps): FieldAria {\n  let {description, errorMessage} = props;\n  let {labelProps, fieldProps} = useLabel(props);\n\n  let descriptionId = useSlotId();\n  let errorMessageId = useSlotId();\n\n  fieldProps = mergeProps(fieldProps, {\n    'aria-describedby': [\n      descriptionId,\n      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n      errorMessageId,\n      props['aria-describedby']\n    ].filter(Boolean).join(' ') || undefined\n  });\n\n  let descriptionProps: HTMLAttributes<HTMLElement> = {};\n  let errorMessageProps: HTMLAttributes<HTMLElement> = {};\n  if (description) {\n    descriptionProps.id = descriptionId;\n  }\n  if (errorMessage) {\n    errorMessageProps.id = errorMessageId;\n  }\n\n  return {\n    labelProps,\n    fieldProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n"]},"metadata":{},"sourceType":"module"}