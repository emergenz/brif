{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.KeyboardAvoidingView=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _hooks=require(\"../../../hooks\");var _styled=require(\"../../../utils/styled\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/basic/KeyboardAvoidingView/KeyboardAvoidingView.tsx\";var StyledKeyboardAvoidingView=(0,_styled.makeStyledComponent)(_reactNative.KeyboardAvoidingView);var KeyboardAvoidingView=(0,_react.forwardRef)(function(props,ref){var _usePropsResolution=(0,_hooks.usePropsResolution)('KeyboardAvoidingView',props,{}),resolvedProps=(0,_extends2.default)({},_usePropsResolution);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(StyledKeyboardAvoidingView,(0,_extends2.default)({},resolvedProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:12}}));});exports.KeyboardAvoidingView=KeyboardAvoidingView;","map":{"version":3,"sources":["KeyboardAvoidingView.tsx"],"names":["StyledKeyboardAvoidingView","RNKeyboardAvoidingView","KeyboardAvoidingView","resolvedProps"],"mappings":"qVAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,yBAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,0JAEA,GAAMA,CAAAA,0BAA+B,CAAG,CAAA,EAAA,OAAA,CAAA,mBAAA,EACtCC,YAAAA,CADF,oBAAwC,CAAxC,CAIO,GAAMC,CAAAA,oBAAoB,CAAG,CAAA,EAAA,MAAA,CAAA,UAAA,EAClC,SAAA,KAAA,CAAA,GAAA,CAAiD,CAAA,GAAA,CAAA,mBAAA,CAClB,CAAA,EAAA,MAAA,CAAA,kBAAA,EAAA,sBAAA,CAAA,KAAA,CADkB,EAClB,CADkB,CACpCC,aADoC,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,mBAAA,CAAA,CAO/C,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OAAO,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,0BAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,aAAA,CAAA,CAA+C,GAAG,CAAlD,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAP,EAAO,CAAA,CAAA,CAAA,CAAP,CAXG,CAA6B,CAA7B,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { KeyboardAvoidingView as RNKeyboardAvoidingView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IKeyboardAvoidingViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledKeyboardAvoidingView: any = makeStyledComponent(\n  RNKeyboardAvoidingView\n);\n\nexport const KeyboardAvoidingView = forwardRef(\n  (props: IKeyboardAvoidingViewProps, ref: any) => {\n    const { ...resolvedProps } = usePropsResolution(\n      'KeyboardAvoidingView',\n      props,\n      {}\n    );\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return <StyledKeyboardAvoidingView {...resolvedProps} ref={ref} />;\n  }\n);\n"]},"metadata":{},"sourceType":"script"}