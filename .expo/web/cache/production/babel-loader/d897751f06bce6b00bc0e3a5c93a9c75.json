{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _interactions=require(\"@react-native-aria/interactions\");var _mergeRefs=require(\"../../../utils/mergeRefs\");var _styled=require(\"../../../utils/styled\");var _useResolvedFontFamily=require(\"../../../hooks/useResolvedFontFamily\");var _reactNative=require(\"react-native-web/dist/index\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Text/index.tsx\";var StyledText=(0,_styled.makeStyledComponent)(_reactNative.Text);var Text=function Text(_ref2,ref){var children=_ref2.children,props=(0,_objectWithoutProperties2.default)(_ref2,[\"children\"]);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Text',props,{},{resolveResponsively:['noOfLines','numberOfLines']}),isTruncated=_usePropsResolution.isTruncated,noOfLines=_usePropsResolution.noOfLines,bold=_usePropsResolution.bold,italic=_usePropsResolution.italic,sub=_usePropsResolution.sub,highlight=_usePropsResolution.highlight,underline=_usePropsResolution.underline,strikeThrough=_usePropsResolution.strikeThrough,propFontFamily=_usePropsResolution.fontFamily,propFontWeight=_usePropsResolution.fontWeight,propFontStyle=_usePropsResolution.fontStyle,_hover=_usePropsResolution._hover,_usePropsResolution$f=_usePropsResolution.fontSize,fontSize=_usePropsResolution$f===void 0?'md':_usePropsResolution$f,numberOfLines=_usePropsResolution.numberOfLines,reslovedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"isTruncated\",\"noOfLines\",\"bold\",\"italic\",\"sub\",\"highlight\",\"underline\",\"strikeThrough\",\"fontFamily\",\"fontWeight\",\"fontStyle\",\"_hover\",\"fontSize\",\"numberOfLines\"]);var _ref=(0,_react.useRef)(null);var _useHover=(0,_interactions.useHover)({},_hover?_ref:null),isHovered=_useHover.isHovered;var fontFamily=propFontFamily;var fontStyle=italic?'italic':propFontStyle;var fontWeight=bold?'bold':propFontWeight;var resolvedFontFamily=(0,_useResolvedFontFamily.useResolvedFontFamily)({fontFamily:fontFamily,fontWeight:fontWeight,fontStyle:fontStyle});if(resolvedFontFamily){fontFamily=resolvedFontFamily;}if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(StyledText,(0,_extends2.default)({},reslovedProps,{numberOfLines:numberOfLines||noOfLines?numberOfLines||noOfLines:isTruncated?1:undefined},resolvedFontFamily,{bg:highlight?'warning.300':reslovedProps.bg,textDecorationLine:underline&&strikeThrough?'underline line-through':underline?'underline':strikeThrough?'line-through':reslovedProps.textDecorationLine,fontSize:sub?10:fontSize,ref:(0,_mergeRefs.mergeRefs)([ref,_ref])},isHovered&&_hover,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:61,columnNumber:5}}),children);};var _default=(0,_react.memo)((0,_react.forwardRef)(Text));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledText","NativeText","Text","children","props","isTruncated","noOfLines","bold","italic","sub","highlight","underline","strikeThrough","propFontFamily","propFontWeight","propFontStyle","_hover","fontSize","numberOfLines","reslovedProps","resolveResponsively","_ref","isHovered","fontFamily","fontStyle","fontWeight","resolvedFontFamily"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef, useRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ITextProps } from './types';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils/mergeRefs';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport { Text as NativeText } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledText = makeStyledComponent(NativeText);\n\nconst Text = ({ children, ...props }: ITextProps, ref: any) => {\n  const {\n    isTruncated,\n    noOfLines,\n    bold,\n    italic,\n    sub,\n    highlight,\n    underline,\n    strikeThrough,\n    fontFamily: propFontFamily,\n    fontWeight: propFontWeight,\n    fontStyle: propFontStyle,\n    _hover,\n    fontSize = 'md',\n    numberOfLines,\n    ...reslovedProps\n  } = usePropsResolution(\n    'Text',\n    props,\n    {},\n    { resolveResponsively: ['noOfLines', 'numberOfLines'] }\n  );\n\n  const _ref = useRef(null);\n  // TODO: might have to add this condition\n  const { isHovered } = useHover({}, _hover ? _ref : null);\n  // const { isHovered } = useHover({}, _ref);\n  let fontFamily = propFontFamily;\n  const fontStyle = italic ? 'italic' : propFontStyle;\n  const fontWeight = bold ? 'bold' : propFontWeight;\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight,\n    fontStyle,\n  });\n\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  }\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <StyledText\n      {...reslovedProps}\n      numberOfLines={\n        numberOfLines || noOfLines\n          ? numberOfLines || noOfLines\n          : isTruncated\n          ? 1\n          : undefined\n      }\n      {...resolvedFontFamily}\n      bg={highlight ? 'warning.300' : reslovedProps.bg}\n      textDecorationLine={\n        underline && strikeThrough\n          ? 'underline line-through'\n          : underline\n          ? 'underline'\n          : strikeThrough\n          ? 'line-through'\n          : reslovedProps.textDecorationLine\n      }\n      fontSize={sub ? 10 : fontSize}\n      ref={mergeRefs([ref, _ref])}\n      {...(isHovered && _hover)}\n    >\n      {children}\n    </StyledText>\n  );\n};\n\nexport default memo(forwardRef(Text));\nexport type { ITextProps };\n"]},"metadata":{},"sourceType":"script"}