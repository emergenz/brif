{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Spinner=_interopRequireDefault(require(\"../Spinner\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _Box=_interopRequireDefault(require(\"../Box\"));var _HStack=_interopRequireDefault(require(\"../Stack/HStack\"));var _Pressable=require(\"../Pressable\");var _utils=require(\"../../../utils\");var _Pressable2=require(\"../../primitives/Pressable/Pressable\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Button/Button.tsx\";var Button=function Button(_ref,ref){var _props$accessibilityR;var children=_ref.children,startIcon=_ref.startIcon,rightIcon=_ref.rightIcon,leftIcon=_ref.leftIcon,endIcon=_ref.endIcon,spinner=_ref.spinner,isDisabled=_ref.isDisabled,isLoading=_ref.isLoading,_ref$spinnerPlacement=_ref.spinnerPlacement,spinnerPlacement=_ref$spinnerPlacement===void 0?'start':_ref$spinnerPlacement,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\",\"startIcon\",\"rightIcon\",\"leftIcon\",\"endIcon\",\"spinner\",\"isDisabled\",\"isLoading\",\"spinnerPlacement\"]);var _useHover=(0,_Pressable2.useHover)(),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _useIsPressed=(0,_Pressable2.useIsPressed)(),pressableProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=(0,_Pressable2.useFocus)(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Button',props,{isDisabled:isDisabled,isHovered:isHovered,isFocused:isFocused,isPressed:isPressed,isLoading:isLoading},{ignoreProps:['_spinner']}),onPressIn=_usePropsResolution.onPressIn,onPressOut=_usePropsResolution.onPressOut,onHoverIn=_usePropsResolution.onHoverIn,onHoverOut=_usePropsResolution.onHoverOut,onFocus=_usePropsResolution.onFocus,onBlur=_usePropsResolution.onBlur,_text=_usePropsResolution._text,_stack=_usePropsResolution._stack,_spinner=_usePropsResolution._spinner,isLoadingText=_usePropsResolution.isLoadingText,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"onPressIn\",\"onPressOut\",\"onHoverIn\",\"onHoverOut\",\"onFocus\",\"onBlur\",\"_text\",\"_stack\",\"_spinner\",\"isLoadingText\"]);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}if(leftIcon){startIcon=leftIcon;}if(rightIcon){endIcon=rightIcon;}if(endIcon&&_react.default.isValidElement(endIcon)){endIcon=_react.default.Children.map(endIcon,function(child,index){return _react.default.cloneElement(child,(0,_extends2.default)({key:\"button-end-icon-\"+index},_text,child.props));});}if(startIcon&&_react.default.isValidElement(startIcon)){startIcon=_react.default.Children.map(startIcon,function(child,index){return _react.default.cloneElement(child,(0,_extends2.default)({key:\"button-start-icon-\"+index},_text,child.props));});}var boxChildren=isLoading&&isLoadingText?isLoadingText:children;var spinnerElement=spinner?spinner:_react.default.createElement(_Spinner.default,(0,_extends2.default)({color:_text==null?void 0:_text.color},_spinner,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:126,columnNumber:5}}));return _react.default.createElement(_Pressable.Pressable,(0,_extends2.default)({disabled:isDisabled||isLoading,ref:ref,onPressIn:(0,_utils.composeEventHandlers)(onPressIn,pressableProps.onPressIn),onPressOut:(0,_utils.composeEventHandlers)(onPressOut,pressableProps.onPressOut),onHoverIn:(0,_utils.composeEventHandlers)(onHoverIn,hoverProps.onHoverIn),onHoverOut:(0,_utils.composeEventHandlers)(onHoverOut,hoverProps.onHoverOut),onFocus:(0,_utils.composeEventHandlers)((0,_utils.composeEventHandlers)(onFocus,focusProps.onFocus)),onBlur:(0,_utils.composeEventHandlers)((0,_utils.composeEventHandlers)(onBlur,focusProps.onBlur))},resolvedProps,{accessibilityRole:(_props$accessibilityR=props.accessibilityRole)!=null?_props$accessibilityR:'button',__self:_this,__source:{fileName:_jsxFileName,lineNumber:130,columnNumber:5}}),_react.default.createElement(_HStack.default,(0,_extends2.default)({},_stack,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:155,columnNumber:7}}),startIcon&&!isLoading?startIcon:null,isLoading&&spinnerPlacement==='start'?spinnerElement:null,boxChildren?_react.default.createElement(_Box.default,{_text:(0,_extends2.default)({},_text),__self:_this,__source:{fileName:_jsxFileName,lineNumber:159,columnNumber:11}},isLoading&&isLoadingText?isLoadingText:children):null,endIcon&&!isLoading?endIcon:null,isLoading&&spinnerPlacement==='end'?spinnerElement:null));};var _default=(0,_react.memo)((0,_react.forwardRef)(Button));exports.default=_default;","map":{"version":3,"sources":["Button.tsx"],"names":["Button","children","startIcon","rightIcon","leftIcon","endIcon","spinner","isDisabled","isLoading","spinnerPlacement","props","hoverProps","isHovered","pressableProps","isPressed","focusProps","isFocused","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","_text","_stack","_spinner","isLoadingText","resolvedProps","ignoreProps","React","key","child","boxChildren","spinnerElement"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Spinner from '../Spinner';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { default as Box, IBoxProps } from '../Box';\nimport HStack from '../Stack/HStack';\nimport { Pressable } from '../Pressable';\nimport type { IButtonProps } from './types';\nimport { composeEventHandlers } from '../../../utils';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Button = (\n  {\n    //@ts-ignore\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    spinner,\n    isDisabled,\n    isLoading,\n    spinnerPlacement = 'start',\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    _text,\n    _stack,\n    _spinner,\n    isLoadingText,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Button',\n    props,\n    { isDisabled, isHovered, isFocused, isPressed, isLoading },\n    { ignoreProps: ['_spinner'] }\n  );\n\n  // const pressableProps = {\n  //   ...resolvedProps,\n  //   _hover,\n  //   _pressed,\n  //   _focus,\n  //   _focusVisible,\n  // };\n  // let {\n  //   _text,\n  //   _disabled,\n  //   _focus,\n  //   _hover,\n  //   _pressed,\n  //   _focusVisible,\n  //   _loading,\n  //   _stack,\n  //   _spinner,\n  //   spinnerProps,\n  //   isLoadingText,\n  //   ...resolvedProps\n  // } = usePropsResolution('Button', props);\n\n  // const pressableProps = {\n  //   ...resolvedProps,\n  //   _hover,\n  //   _pressed,\n  //   _focus,\n  //   _focusVisible,\n  // };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  const boxChildren = isLoading && isLoadingText ? isLoadingText : children;\n\n  const spinnerElement = spinner ? (\n    spinner\n  ) : (\n    <Spinner color={_text?.color} {..._spinner} />\n  );\n\n  return (\n    <Pressable\n      disabled={isDisabled || isLoading}\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus)\n        // focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur)\n        // focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n      // {...pressableProps}\n      // {...(isDisabled && _disabled)}\n      // {...(isLoading && _loading)}\n      accessibilityRole={props.accessibilityRole ?? 'button'}\n    >\n      <HStack {..._stack}>\n        {startIcon && !isLoading ? startIcon : null}\n        {isLoading && spinnerPlacement === 'start' ? spinnerElement : null}\n        {boxChildren ? (\n          <Box\n            _text={{\n              ..._text,\n              // ...hoverTextProps,\n              // ...focusTextProps,\n              // ...focusVisibleTextProps,\n              // ...pressedTextProps,\n              // ...loadingTextProps,\n              // ...disabledTextProps,\n            }}\n          >\n            {isLoading && isLoadingText ? isLoadingText : children}\n          </Box>\n        ) : null}\n\n        {endIcon && !isLoading ? endIcon : null}\n        {isLoading && spinnerPlacement === 'end' ? spinnerElement : null}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Button));\n"]},"metadata":{},"sourceType":"script"}