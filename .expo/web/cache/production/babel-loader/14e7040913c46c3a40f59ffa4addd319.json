{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Context=require(\"./Context\");var _hooks=require(\"../../../hooks\");var _Button=_interopRequireDefault(require(\"../../primitives/Button/Button\"));var _Icons=require(\"../../primitives/Icon/Icons\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Modal/ModalCloseButton.tsx\";var ModalCloseButton=function ModalCloseButton(props,ref){var _usePropsResolution=(0,_hooks.usePropsResolution)('ModalCloseButton',props),_icon=_usePropsResolution._icon,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"_icon\"]);var _React$useContext=_react.default.useContext(_Context.ModalContext),handleClose=_React$useContext.handleClose;if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Button.default,(0,_extends2.default)({variant:\"ghost\"},resolvedProps,{onPress:handleClose,accessibilityLabel:\"Close dialog\",ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:20,columnNumber:5}}),_react.default.createElement(_Icons.CloseIcon,(0,_extends2.default)({},_icon,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:27,columnNumber:7}})));};var _default=(0,_react.memo)((0,_react.forwardRef)(ModalCloseButton));exports.default=_default;","map":{"version":3,"sources":["ModalCloseButton.tsx"],"names":["ModalCloseButton","_icon","resolvedProps","handleClose","React","ModalContext"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,QAAA,CAAA,OAAA,aAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,OAAA,kCAAA,CAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,+BAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,4IAEA,GAAMA,CAAAA,gBAAgB,CAAhBA,QAAAA,CAAAA,gBAAAA,CAAmB,KAAnBA,CAAmB,GAAnBA,CAAuD,CAAA,GAAA,CAAA,mBAAA,CACvB,CAAA,EAAA,MAAA,CAAA,kBAAA,EAAA,kBAAA,CADuB,KACvB,CADuB,CACnDC,KADmD,CAAA,mBAAA,CAAA,KAAA,CACzCC,aADyC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,iBAAA,CAKnCE,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,QAAAA,CALkB,YAKnCD,CALmC,CAKnDD,WALmD,CAAA,iBAAA,CAAA,WAAA,CAO3D,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,OAAO,CADT,OAAA,CAAA,CAAA,aAAA,CAAA,CAGE,OAAO,CAHT,WAAA,CAIE,kBAAkB,CAJpB,cAAA,CAKE,GAAG,CALL,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAOE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,SAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CARJ,CAQI,CAAA,CAAA,CAAA,CAPF,CADF,CAVF,CAAA,C,aAuBe,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,gBAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport Button from '../../primitives/Button/Button';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport type { IButtonProps } from '../../primitives/Button';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalCloseButton = (props: IButtonProps, ref?: any) => {\n  const { _icon, ...resolvedProps } = usePropsResolution(\n    'ModalCloseButton',\n    props\n  );\n  const { handleClose } = React.useContext(ModalContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Button\n      variant=\"ghost\"\n      {...resolvedProps}\n      onPress={handleClose}\n      accessibilityLabel=\"Close dialog\"\n      ref={ref}\n    >\n      <CloseIcon {..._icon} />\n    </Button>\n  );\n};\n\nexport default memo(forwardRef(ModalCloseButton));\n"]},"metadata":{},"sourceType":"script"}