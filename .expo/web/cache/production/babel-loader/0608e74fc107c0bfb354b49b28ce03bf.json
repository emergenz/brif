{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.View=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _hooks=require(\"../../../hooks\");var _styled=require(\"../../../utils/styled\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/basic/View/View.tsx\";var StyledView=(0,_styled.makeStyledComponent)(_reactNative.View);var View=(0,_react.forwardRef)(function(props,ref){var _usePropsResolution=(0,_hooks.usePropsResolution)('View',props),resolvedProps=(0,_extends2.default)({},_usePropsResolution);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(StyledView,(0,_extends2.default)({},resolvedProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:16,columnNumber:10}}));});exports.View=View;","map":{"version":3,"sources":["View.tsx"],"names":["StyledView","RNView","View","resolvedProps"],"mappings":"qUAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,yBAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,0HAEA,GAAMA,CAAAA,UAAe,CAAG,CAAA,EAAA,OAAA,CAAA,mBAAA,EAAoBC,YAAAA,CAA5C,IAAwB,CAAxB,CAEO,GAAMC,CAAAA,IAAI,CAAG,CAAA,EAAA,MAAA,CAAA,UAAA,EAAW,SAAA,KAAA,CAAA,GAAA,CAAiC,CAAA,GAAA,CAAA,mBAAA,CACjC,CAAA,EAAA,MAAA,CAAA,kBAAA,EAAA,MAAA,CADiC,KACjC,CADiC,CACnDC,aADmD,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,mBAAA,CAAA,CAG9D,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OAAO,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,UAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,aAAA,CAAA,CAA+B,GAAG,CAAlC,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAP,EAAO,CAAA,CAAA,CAAA,CAAP,CANK,CAAa,CAAb,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { View as RNView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledView: any = makeStyledComponent(RNView);\n\nexport const View = forwardRef((props: IViewProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('View', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledView {...resolvedProps} ref={ref} />;\n});\n"]},"metadata":{},"sourceType":"script"}