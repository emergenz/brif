{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Pressable=require(\"../../primitives/Pressable\");var _Icon=require(\"../../primitives/Icon\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _utils=require(\"../../../utils\");var _Pressable2=require(\"../../primitives/Pressable/Pressable\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/IconButton/index.tsx\";var IconButton=function IconButton(_ref,ref){var icon=_ref.icon,children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"icon\",\"children\"]);var _useHover=(0,_Pressable2.useHover)(),hoverProps=_useHover.hoverProps,isHovered=_useHover.isHovered;var _useIsPressed=(0,_Pressable2.useIsPressed)(),pressableProps=_useIsPressed.pressableProps,isPressed=_useIsPressed.isPressed;var _useFocus=(0,_Pressable2.useFocus)(),focusProps=_useFocus.focusProps,isFocused=_useFocus.isFocused;var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('IconButton',props,{isHovered:isHovered,isPressed:isPressed,isFocused:isFocused}),_icon=_usePropsResolution._icon,onPressIn=_usePropsResolution.onPressIn,onPressOut=_usePropsResolution.onPressOut,onHoverIn=_usePropsResolution.onHoverIn,onHoverOut=_usePropsResolution.onHoverOut,onFocus=_usePropsResolution.onFocus,onBlur=_usePropsResolution.onBlur,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"_icon\",\"onPressIn\",\"onPressOut\",\"onHoverIn\",\"onHoverOut\",\"onFocus\",\"onBlur\"]);var clonedIcon;if(icon){clonedIcon=_react.default.cloneElement(icon,(0,_extends2.default)({},_icon));}if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Pressable.Pressable,(0,_extends2.default)({accessibilityRole:\"button\",ref:ref,onPressIn:(0,_utils.composeEventHandlers)(onPressIn,pressableProps.onPressIn),onPressOut:(0,_utils.composeEventHandlers)(onPressOut,pressableProps.onPressOut),onHoverIn:(0,_utils.composeEventHandlers)(onHoverIn,hoverProps.onHoverIn),onHoverOut:(0,_utils.composeEventHandlers)(onHoverOut,hoverProps.onHoverOut),onFocus:(0,_utils.composeEventHandlers)((0,_utils.composeEventHandlers)(onFocus,focusProps.onFocus)),onBlur:(0,_utils.composeEventHandlers)((0,_utils.composeEventHandlers)(onBlur,focusProps.onBlur))},resolvedProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:50,columnNumber:5}}),clonedIcon||_react.default.createElement(_Icon.Icon,(0,_extends2.default)({},_icon,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:71,columnNumber:22}}),children));};var _default=(0,_react.memo)((0,_react.forwardRef)(IconButton));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["IconButton","icon","children","props","hoverProps","isHovered","pressableProps","isPressed","focusProps","isFocused","_icon","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","resolvedProps","clonedIcon","React"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,OAAA,8BAAA,CACA,GAAA,CAAA,KAAA,CAAA,OAAA,yBAAA,CACA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CAEA,GAAA,CAAA,WAAA,CAAA,OAAA,wCAAA,C,sIAMA,GAAMA,CAAAA,UAAU,CAAVA,QAAAA,CAAAA,UAAAA,CAAa,IAAbA,CAAa,GAAbA,CAGD,CAFDC,GAAAA,CAAAA,IAEC,CAAA,IAAA,CAFDA,IAAAA,CAAMC,QAEL,CAAA,IAAA,CAFKA,QAAND,CAAmBE,KAElB,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAFDF,CAEC,GAAA,CAAA,SAAA,CAC+B,CAAA,EAAA,WAAA,CAD/B,QAC+B,GAD/B,CACKG,UADL,CAAA,SAAA,CAAA,UAAA,CACiBC,SADjB,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,CAAA,aAAA,CAEmC,CAAA,EAAA,WAAA,CAFnC,YAEmC,GAFnC,CAEKC,cAFL,CAAA,aAAA,CAAA,cAAA,CAEqBC,SAFrB,CAAA,aAAA,CAAA,SAAA,CAAA,GAAA,CAAA,SAAA,CAG+B,CAAA,EAAA,WAAA,CAH/B,QAG+B,GAH/B,CAGKC,UAHL,CAAA,SAAA,CAAA,UAAA,CAGiBC,SAHjB,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,CAAA,mBAAA,CAcC,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,YAAA,CAAA,KAAA,CAAwC,CAC1CJ,SAAS,CADiC,SAAA,CAE1CE,SAAS,CAFiC,SAAA,CAG1CE,SAAS,CAjBR,SAcyC,CAAxC,CAdD,CAMDC,KANC,CAAA,mBAAA,CAAA,KAAA,CAODC,SAPC,CAAA,mBAAA,CAAA,SAAA,CAQDC,UARC,CAAA,mBAAA,CAAA,UAAA,CASDC,SATC,CAAA,mBAAA,CAAA,SAAA,CAUDC,UAVC,CAAA,mBAAA,CAAA,UAAA,CAWDC,OAXC,CAAA,mBAAA,CAAA,OAAA,CAYDC,MAZC,CAAA,mBAAA,CAAA,MAAA,CAaEC,aAbF,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,OAAA,CAAA,WAAA,CAAA,YAAA,CAAA,WAAA,CAAA,YAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,CAoBH,GAAA,CAAA,UAAA,CACA,GAAA,IAAA,CAAU,CACRC,UAAU,CAAGC,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,SAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAbD,KAAaC,CAAAA,CAAbD,CAMF,IAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAGF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAA,CAAD,SAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,iBAAiB,CADnB,QAAA,CAEE,GAAG,CAFL,GAAA,CAGE,SAAS,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,SAAA,CAAgCZ,cAAc,CAH3D,SAGa,CAHb,CAIE,UAAU,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,UAAA,CAAiCA,cAAc,CAJ7D,UAIc,CAJd,CAME,SAAS,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,SAAA,CAAgCF,UAAU,CANvD,SAMa,CANb,CAQE,UAAU,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,UAAA,CAAiCA,UAAU,CARzD,UAQc,CARd,CAUE,OAAO,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EACP,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,OAAA,CAA8BI,UAAU,CAX5C,OAWI,CADO,CAVX,CAeE,MAAM,CAAE,CAAA,EAAA,MAAA,CAAA,oBAAA,EACN,CAAA,EAAA,MAAA,CAAA,oBAAA,EAAA,MAAA,CAA6BA,UAAU,CAhB3C,MAgBI,CADM,CAfV,CAAA,CAAA,aAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAqBGU,UAAU,EAAI,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAtBnB,QAsBmB,CArBjB,CADF,CAnCF,CAAA,C,aA8De,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,UAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport { Icon } from '../../primitives/Icon';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { composeEventHandlers } from '../../../utils';\nimport type { IIconButtonProps } from './types';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\n\nconst IconButton = (\n  { icon, children, ...props }: IIconButtonProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n\n  const {\n    _icon,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('IconButton', props, {\n    isHovered,\n    isPressed,\n    isFocused,\n  });\n\n  let clonedIcon;\n  if (icon) {\n    clonedIcon = React.cloneElement(icon, {\n      ..._icon,\n    });\n  }\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      accessibilityRole=\"button\"\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus)\n        // focusRingProps.onFocu\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur)\n        // focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n    >\n      {clonedIcon || <Icon {..._icon}>{children}</Icon>}\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(IconButton));\nexport type { IIconButtonProps };\n"]},"metadata":{},"sourceType":"script"}