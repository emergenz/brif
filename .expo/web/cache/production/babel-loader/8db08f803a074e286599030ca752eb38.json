{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _react=_interopRequireDefault(require(\"react\"));var _Icon=require(\"../Icon\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/List/ListIcon.tsx\";var ListIcon=function ListIcon(props,ref){var resolvedProps=(0,_useThemeProps.usePropsResolution)('ListIcon',props);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Icon.Icon,(0,_extends2.default)({},resolvedProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:12,columnNumber:10}}));};var _default=_react.default.memo(_react.default.forwardRef(ListIcon));exports.default=_default;","map":{"version":3,"sources":["ListIcon.tsx"],"names":["ListIcon","resolvedProps","React"],"mappings":"mPAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,KAAA,CAAA,OAAA,WAAA,CACA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,mIAEA,GAAMA,CAAAA,QAAQ,CAARA,QAAAA,CAAAA,QAAAA,CAAW,KAAXA,CAAW,GAAXA,CAA6C,CACjD,GAAMC,CAAAA,aAAa,CAAG,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,UAAA,CAAtB,KAAsB,CAAtB,CAEA,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OAAO,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAD,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,aAAA,CAAA,CAAyB,GAAG,CAA5B,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAP,EAAO,CAAA,CAAA,CAAA,CAAP,CANF,CAAA,C,aASeC,MAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAWA,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAXA,QAAWA,CAAXA,C","sourcesContent":["import React from 'react';\nimport { IIconProps, Icon } from '../Icon';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ListIcon = (props: IIconProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ListIcon', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Icon {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(ListIcon));\n"]},"metadata":{},"sourceType":"script"}