{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.omitUndefined=omitUndefined;exports.getRandomString=getRandomString;exports.orderedExtractInObject=orderedExtractInObject;exports.extractInObject=extractInObject;exports.getColorFormColorScheme=getColorFormColorScheme;exports.getColorScheme=getColorScheme;exports.hasValidBreakpointFormat=hasValidBreakpointFormat;exports.findLastValidBreakpoint=findLastValidBreakpoint;exports.getClosestBreakpoint=getClosestBreakpoint;exports.isResponsiveAnyProp=isResponsiveAnyProp;exports.platformSpecificSpaceUnits=exports.convertToDp=exports.convertRemToAbsolute=exports.convertAbsoluteToRem=exports.baseFontSize=exports.inValidBreakpointProps=exports.breakpoints=exports.stylingProps=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _lodash=_interopRequireDefault(require(\"lodash.omitby\"));var _lodash2=_interopRequireDefault(require(\"lodash.isnil\"));var _lodash3=_interopRequireDefault(require(\"lodash.pick\"));var _lodash4=_interopRequireDefault(require(\"lodash.omit\"));var _lodash5=_interopRequireDefault(require(\"lodash.get\"));var _reactNative=require(\"react-native-web/dist/index\");var stylingProps={margin:['margin','m','marginTop','mt','marginRight','mr','marginBottom','mb','marginLeft','ml','marginX','mx','marginY','my'],padding:['padding','p','paddingTop','pt','paddingRight','pr','paddingBottom','pb','paddingLeft','pl','paddingX','px','paddingY','py'],border:['border','borderWidth','borderStyle','borderColor','borderRadius','borderTop','borderTopWidth','borderTopStyle','borderTopColor','borderTopLeftRadius','borderTopRightRadius','borderRight','borderRightWidth','borderRightStyle','borderRightColor','borderBottom','borderBottomWidth','borderBottomStyle','borderBottomColor','borderBottomLeftRadius','borderBottomRightRadius','borderLeft','borderLeftWidth','borderLeftStyle','borderLeftColor','borderX','borderY'],layout:['width','w','height','h','display','minWidth','minW','minH','minHeight','maxWidth','maxW','maxHeight','maxH','size','verticalAlign','overflow','overflowX','overflowY'],flexbox:['alignItems','alignContent','justifyItems','justifyContent','flexWrap','flexDirection','flex','flexGrow','flexShrink','flexBasis','justifySelf','alignSelf','order'],position:['position','zIndex','top','right','bottom','left'],background:['bg','backgroundColor']};exports.stylingProps=stylingProps;function omitUndefined(obj){return(0,_lodash.default)(obj,_lodash2.default);}function getRandomString(length){var result='';var characters='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';var charactersLength=characters.length;for(var i=0;i<length;i++){result+=characters.charAt(Math.floor(Math.random()*charactersLength));}return result;}function orderedPick(obj,values){var ret={};Object.keys(obj).forEach(function(key){if(values.includes(key)){ret[key]=obj[key];}});return ret;}function orderedExtractInObject(parent,values){return[omitUndefined(orderedPick(parent,values)),omitUndefined((0,_lodash4.default)(parent,values))];}function extractInObject(parent,values){return[omitUndefined((0,_lodash3.default)(parent,values)),omitUndefined((0,_lodash4.default)(parent,values))];}function getColorFormColorScheme(props){var theme=props.theme,colorScheme=props.colorScheme,isDisabled=props.isDisabled;var simpleColorScheme=colorScheme.split('.')[0];if(isDisabled)return'gray.300';else if(simpleColorScheme in theme.colors){return theme.colors[simpleColorScheme][0]==='#'?simpleColorScheme:theme.colors[simpleColorScheme][400]||theme.colors[simpleColorScheme][200];}else return'primary.200';}function getColorScheme(props,customColorScheme){var theme=props.theme,colorScheme=props.colorScheme;colorScheme=customColorScheme||colorScheme;if(!(colorScheme in theme.colors))return'primary';else{if(typeof theme.colors[colorScheme]==='object')return colorScheme;}}var breakpoints=Object.freeze(['base','sm','md','lg','xl']);exports.breakpoints=breakpoints;var inValidBreakpointProps=['style','children','shadowOffset'];exports.inValidBreakpointProps=inValidBreakpointProps;function hasValidBreakpointFormat(breaks,themeBreakpoints,property){if(property&&inValidBreakpointProps.indexOf(property)!==-1){return false;}else if(Array.isArray(breaks)){return breaks.length?true:false;}else if(typeof breaks==='object'&&breaks!==null){var keys=Object.keys(breaks);for(var i=0;i<keys.length;i++){if(Object.keys(themeBreakpoints).indexOf(keys[i])===-1){return false;}}return true;}else{return false;}}function findLastValidBreakpoint(values,themeBreakpoints,currentBreakpoint){var _valArray$currentBrea;var valArray=Array.isArray(values)?values:Object.keys(themeBreakpoints).map(function(bPoint){return values[bPoint];});return(_valArray$currentBrea=valArray[currentBreakpoint])!=null?_valArray$currentBrea:valArray.slice(0,currentBreakpoint+1).filter(function(v){return!(0,_lodash2.default)(v);}).pop();}function getClosestBreakpoint(values,point){var dimValues=Object.values(values);var index=-1;for(var i=0;i<dimValues.length;i++){if(dimValues[i]===point){index=i;break;}else if(dimValues[i]>point&&i!==0){index=i-1;break;}else if(dimValues[i]<point&&i===dimValues.length-1){index=i;break;}}return index;}var baseFontSize=16;exports.baseFontSize=baseFontSize;var convertAbsoluteToRem=function convertAbsoluteToRem(px){return px/baseFontSize+\"rem\";};exports.convertAbsoluteToRem=convertAbsoluteToRem;var convertRemToAbsolute=function convertRemToAbsolute(rem){return rem*baseFontSize;};exports.convertRemToAbsolute=convertRemToAbsolute;var convertToDp=function convertToDp(value){var numberRegex=/^\\d+$/;if(typeof value==='number'){return value;}else{var isAbsolute=numberRegex.test(value);var isPx=!isAbsolute&&value.endsWith('px');var isRem=!isAbsolute&&value.endsWith('rem');var isEm=!isAbsolute&&value.endsWith('em');var finalDpValue=0;if(isAbsolute||isPx){finalDpValue=parseFloat(value);}else if(isEm){finalDpValue=convertRemToAbsolute(parseFloat(value));}else if(isRem){finalDpValue=convertRemToAbsolute(parseFloat(value));}return finalDpValue;}};exports.convertToDp=convertToDp;var platformSpecificSpaceUnits=function platformSpecificSpaceUnits(theme){var scales=['space','sizes','fontSizes'];var newTheme=(0,_extends2.default)({},theme);var isWeb=_reactNative.Platform.OS==='web';scales.forEach(function(key){var scale=(0,_lodash5.default)(theme,key,{});var newScale=(0,_extends2.default)({},scale);for(var scaleKey in scale){var val=scale[scaleKey];if(typeof val!=='object'){var isAbsolute=typeof val==='number';var isPx=!isAbsolute&&val.endsWith('px');var isRem=!isAbsolute&&val.endsWith('rem');if(isWeb){if(isAbsolute){newScale[scaleKey]=convertAbsoluteToRem(val);}}else{if(isRem){newScale[scaleKey]=convertRemToAbsolute(parseFloat(val));}else if(isPx){newScale[scaleKey]=parseFloat(val);}}}}newTheme[key]=newScale;});return newTheme;};exports.platformSpecificSpaceUnits=platformSpecificSpaceUnits;function isResponsiveAnyProp(props,theme){if(props){var keys=Object.keys(props);for(var i=0;i<keys.length;i++){if(hasValidBreakpointFormat(props[keys[i]],theme.breakpoints,keys[i])){return true;}}}return false;}","map":{"version":3,"sources":["utils.ts"],"names":["stylingProps","margin","padding","border","layout","flexbox","position","background","isNil","result","characters","charactersLength","i","Math","ret","Object","values","obj","omitUndefined","orderedPick","theme","colorScheme","isDisabled","props","simpleColorScheme","customColorScheme","breakpoints","inValidBreakpointProps","property","Array","breaks","keys","valArray","currentBreakpoint","dimValues","index","baseFontSize","convertAbsoluteToRem","px","convertRemToAbsolute","rem","convertToDp","numberRegex","isAbsolute","isPx","value","isRem","isEm","finalDpValue","parseFloat","platformSpecificSpaceUnits","scales","newTheme","isWeb","Platform","scale","newScale","val","hasValidBreakpointFormat"],"mappings":"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","sourcesContent":["import omitBy from 'lodash.omitby';\nimport isNil from 'lodash.isnil';\nimport pick from 'lodash.pick';\nimport omit from 'lodash.omit';\nimport get from 'lodash.get';\nimport type { ITheme } from '../index';\nimport { Platform } from 'react-native';\n\nexport const stylingProps = {\n  margin: [\n    'margin',\n    'm',\n    'marginTop',\n    'mt',\n    'marginRight',\n    'mr',\n    'marginBottom',\n    'mb',\n    'marginLeft',\n    'ml',\n    'marginX',\n    'mx',\n    'marginY',\n    'my',\n  ],\n  padding: [\n    'padding',\n    'p',\n    'paddingTop',\n    'pt',\n    'paddingRight',\n    'pr',\n    'paddingBottom',\n    'pb',\n    'paddingLeft',\n    'pl',\n    'paddingX',\n    'px',\n    'paddingY',\n    'py',\n  ],\n  border: [\n    'border',\n    'borderWidth',\n    'borderStyle',\n    'borderColor',\n    'borderRadius',\n    'borderTop',\n    'borderTopWidth',\n    'borderTopStyle',\n    'borderTopColor',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderRight',\n    'borderRightWidth',\n    'borderRightStyle',\n    'borderRightColor',\n    'borderBottom',\n    'borderBottomWidth',\n    'borderBottomStyle',\n    'borderBottomColor',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'borderLeft',\n    'borderLeftWidth',\n    'borderLeftStyle',\n    'borderLeftColor',\n    'borderX',\n    'borderY',\n  ],\n  layout: [\n    'width',\n    'w',\n    'height',\n    'h',\n    'display',\n    'minWidth',\n    'minW',\n    'minH',\n    'minHeight',\n    'maxWidth',\n    'maxW',\n    'maxHeight',\n    'maxH',\n    'size',\n    'verticalAlign',\n    'overflow',\n    'overflowX',\n    'overflowY',\n  ],\n  flexbox: [\n    'alignItems',\n    'alignContent',\n    'justifyItems',\n    'justifyContent',\n    'flexWrap',\n    'flexDirection',\n    'flex',\n    'flexGrow',\n    'flexShrink',\n    'flexBasis',\n    'justifySelf',\n    'alignSelf',\n    'order',\n  ],\n  position: ['position', 'zIndex', 'top', 'right', 'bottom', 'left'],\n  background: ['bg', 'backgroundColor'],\n};\nexport type Dict = Record<string, any>;\nexport function omitUndefined(obj: any) {\n  return omitBy(obj, isNil);\n}\nexport function getRandomString(length: number) {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n// Inefficient way for pick, but retains order of props.\nfunction orderedPick(obj: any, values: any) {\n  const ret: any = {};\n  Object.keys(obj).forEach((key: string) => {\n    if (values.includes(key)) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\nexport function orderedExtractInObject(parent: any, values: Array<string>) {\n  return [\n    omitUndefined(orderedPick(parent, values)),\n    omitUndefined(omit(parent, values)),\n  ];\n}\n/**\n *\n * @param parent The object from which data needs to extracted\n * @param values Keys which needs to be extracted\n * @returns [extractedProps, remainingProps]\n */\nexport function extractInObject(parent: any, values: Array<string>) {\n  return [\n    omitUndefined(pick(parent, values)),\n    omitUndefined(omit(parent, values)),\n  ];\n}\nexport function getColorFormColorScheme(props: Record<string, any>) {\n  const { theme, colorScheme, isDisabled } = props;\n  const simpleColorScheme = colorScheme.split('.')[0];\n  if (isDisabled) return 'gray.300';\n  else if (simpleColorScheme in theme.colors) {\n    return theme.colors[simpleColorScheme][0] === '#'\n      ? simpleColorScheme\n      : theme.colors[simpleColorScheme][400] ||\n          theme.colors[simpleColorScheme][200];\n  } else return 'primary.200';\n}\n\n// TODO: This function can be removed.\nexport function getColorScheme(\n  props: Record<string, any>,\n  customColorScheme?: string\n) {\n  let { theme, colorScheme } = props;\n  colorScheme = customColorScheme || colorScheme;\n  if (!(colorScheme in theme.colors)) return 'primary';\n  else {\n    if (typeof theme.colors[colorScheme] === 'object') return colorScheme;\n  }\n}\nexport const breakpoints = Object.freeze(['base', 'sm', 'md', 'lg', 'xl']);\nexport const inValidBreakpointProps = ['style', 'children', 'shadowOffset'];\nexport function hasValidBreakpointFormat(\n  breaks: any,\n  themeBreakpoints?: any,\n  property?: string\n) {\n  if (property && inValidBreakpointProps.indexOf(property) !== -1) {\n    return false;\n  } else if (Array.isArray(breaks)) {\n    return breaks.length ? true : false;\n  } else if (typeof breaks === 'object' && breaks !== null) {\n    const keys = Object.keys(breaks);\n    for (let i = 0; i < keys.length; i++) {\n      if (Object.keys(themeBreakpoints).indexOf(keys[i]) === -1) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function findLastValidBreakpoint(\n  values: any,\n  themeBreakpoints: any,\n  currentBreakpoint: number\n) {\n  const valArray = Array.isArray(values)\n    ? values\n    : Object.keys(themeBreakpoints).map((bPoint: string) => values[bPoint]);\n  return (\n    valArray[currentBreakpoint] ??\n    valArray\n      .slice(0, currentBreakpoint + 1)\n      .filter((v: any) => !isNil(v))\n      .pop()\n  );\n}\nexport function getClosestBreakpoint(\n  values: Record<string, any>,\n  point: number\n) {\n  const dimValues = Object.values(values);\n  let index = -1;\n  for (let i = 0; i < dimValues.length; i++) {\n    if (dimValues[i] === point) {\n      index = i;\n      break;\n    } else if (dimValues[i] > point && i !== 0) {\n      index = i - 1;\n      break;\n    }\n    // If windowWidth is greater than last available breakpoint clamp it to last index\n    else if (dimValues[i] < point && i === dimValues.length - 1) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n}\n\nexport const baseFontSize = 16;\n\nexport const convertAbsoluteToRem = (px: number) => {\n  return `${px / baseFontSize}rem`;\n};\n\nexport const convertRemToAbsolute = (rem: number) => {\n  return rem * baseFontSize;\n};\n\nexport const convertToDp = (value: number | string): number => {\n  const numberRegex = /^\\d+$/;\n\n  if (typeof value === 'number') {\n    return value;\n  } else {\n    const isAbsolute = numberRegex.test(value);\n    const isPx = !isAbsolute && value.endsWith('px');\n    const isRem = !isAbsolute && value.endsWith('rem');\n    const isEm = !isAbsolute && value.endsWith('em');\n\n    let finalDpValue = 0;\n\n    if (isAbsolute || isPx) {\n      finalDpValue = parseFloat(value);\n    } else if (isEm) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    } else if (isRem) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    }\n\n    return finalDpValue;\n  }\n};\n\n/**\n *\n * @param theme\n * @description\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to `rem` on web if the token value specified is an absolute number.\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to absolute number on native if the token value specified is in `px` or `rem`\n*/\nexport const platformSpecificSpaceUnits = (theme: ITheme) => {\n  const scales = ['space', 'sizes', 'fontSizes'];\n\n  const newTheme = { ...theme };\n  const isWeb = Platform.OS === 'web';\n  scales.forEach((key) => {\n    const scale = get(theme, key, {});\n    const newScale = { ...scale };\n    for (const scaleKey in scale) {\n      const val = scale[scaleKey];\n      if (typeof val !== 'object') {\n        const isAbsolute = typeof val === 'number';\n        const isPx = !isAbsolute && val.endsWith('px');\n        const isRem = !isAbsolute && val.endsWith('rem');\n\n        // If platform is web, we need to convert absolute unit to rem. e.g. 16 to 1rem\n        if (isWeb) {\n          if (isAbsolute) {\n            newScale[scaleKey] = convertAbsoluteToRem(val);\n          }\n        }\n        // If platform is not web, we need to convert px unit to absolute and rem unit to absolute. e.g. 16px to 16. 1rem to 16.\n        else {\n          if (isRem) {\n            newScale[scaleKey] = convertRemToAbsolute(parseFloat(val));\n          } else if (isPx) {\n            newScale[scaleKey] = parseFloat(val);\n          }\n        }\n      }\n    }\n    //@ts-ignore\n    newTheme[key] = newScale;\n  });\n\n  return newTheme;\n};\nexport function isResponsiveAnyProp(props: Record<string, any>, theme: any) {\n  if (props) {\n    const keys = Object.keys(props);\n    for (let i = 0; i < keys.length; i++) {\n      if (\n        hasValidBreakpointFormat(props[keys[i]], theme.breakpoints, keys[i])\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"script"}