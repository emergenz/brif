{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.AlertIcon=exports.Alert=void 0;var _tools=require(\"../tools\");function getBg(props){var theme=props.theme,colorScheme=props.colorScheme,status=props.status,variant=props.variant;colorScheme=(0,_tools.getColorScheme)(props,colorScheme!=='primary'?colorScheme:status);var lightBg=variant==='solid'?(0,_tools.getColor)(theme,colorScheme+\".600\",colorScheme):(0,_tools.getColor)(theme,colorScheme+\".100\",colorScheme);var darkBg=variant==='solid'?(0,_tools.getColor)(theme,colorScheme+\".700\",colorScheme):(0,_tools.getColor)(theme,colorScheme+\".200\",colorScheme);return(0,_tools.mode)(lightBg,darkBg)(props);}var variantSubtle=function variantSubtle(props){var colorScheme=props.colorScheme,status=props.status;colorScheme=(0,_tools.getColorScheme)(props,colorScheme!=='primary'?colorScheme:status);return{bg:getBg(props),_icon:{color:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".700\")(props)}};};var variantOutline=function variantOutline(props){var colorScheme=props.colorScheme,status=props.status;colorScheme=(0,_tools.getColorScheme)(props,colorScheme!=='primary'?colorScheme:status);return{borderWidth:1,borderColor:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".700\")(props),_icon:{color:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".700\")(props)}};};var variantOutlineLight=function variantOutlineLight(props){var colorScheme=props.colorScheme,status=props.status,theme=props.theme;colorScheme=(0,_tools.getColorScheme)(props,colorScheme!=='primary'?colorScheme:status);return{borderWidth:1,borderColor:(0,_tools.transparentize)((0,_tools.mode)(colorScheme+\".600\",colorScheme+\".500\")(props),0.2)(theme),_icon:{color:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".200\")(props)}};};var variantSolid=function variantSolid(props){return{borderWidth:6,borderColor:'transparent',bg:getBg(props),_icon:{color:(0,_tools.mode)(\"coolGray.50\",\"warmGray.50\")(props)}};};var variantLeftAccent=function variantLeftAccent(props){var colorScheme=props.colorScheme,status=props.status;colorScheme=(0,_tools.getColorScheme)(props,colorScheme!=='primary'?colorScheme:status);return{borderWidth:4,bg:getBg(props),_icon:{color:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".700\")(props)},borderColor:'transparent',borderLeftColor:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".700\")(props)};};var variantTopAccent=function variantTopAccent(props){var colorScheme=props.colorScheme,status=props.status;colorScheme=(0,_tools.getColorScheme)(props,colorScheme!=='primary'?colorScheme:status);return{borderWidth:4,borderColor:'transparent',borderTopColor:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".700\")(props),bg:getBg(props),_icon:{color:(0,_tools.mode)(colorScheme+\".600\",colorScheme+\".700\")(props)}};};var variants={'subtle':variantSubtle,'solid':variantSolid,'left-accent':variantLeftAccent,'top-accent':variantTopAccent,'outline':variantOutline,'outline-light':variantOutlineLight};var Alert={baseStyle:{alignItems:'center',justifyContent:'flex-start',p:3,space:3,borderRadius:'sm'},variants:variants,defaultProps:{colorScheme:'primary',variant:'subtle'}};exports.Alert=Alert;var AlertIcon={baseStyle:{size:4}};exports.AlertIcon=AlertIcon;","map":{"version":3,"sources":["alert.ts"],"names":["theme","colorScheme","status","variant","props","lightBg","darkBg","variantSubtle","bg","getBg","_icon","color","variantOutline","borderWidth","borderColor","variantOutlineLight","variantSolid","variantLeftAccent","borderLeftColor","variantTopAccent","borderTopColor","variants","Alert","baseStyle","alignItems","justifyContent","p","space","borderRadius","defaultProps","AlertIcon","size"],"mappings":"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","sourcesContent":["import { mode, getColor, getColorScheme, transparentize } from '../tools';\n\nfunction getBg(props: Record<string, any>) {\n  let { theme, colorScheme, status, variant } = props;\n\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  const lightBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.600`, colorScheme)\n      : getColor(theme, `${colorScheme}.100`, colorScheme);\n\n  const darkBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.700`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n  return mode(lightBg, darkBg)(props);\n}\n\nconst variantSubtle = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variantOutline = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\nconst variantOutlineLight = (props: Record<string, any>) => {\n  let { colorScheme, status, theme } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: transparentize(\n      mode(`${colorScheme}.600`, `${colorScheme}.500`)(props),\n      0.2\n    )(theme),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n  };\n};\n\nconst variantSolid = (props: Record<string, any>) => {\n  return {\n    borderWidth: 6,\n    borderColor: 'transparent',\n    bg: getBg(props),\n    _icon: { color: mode(`coolGray.50`, `warmGray.50`)(props) },\n  };\n};\nconst variantLeftAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n    borderColor: 'transparent',\n    borderLeftColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n  };\n};\nconst variantTopAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    borderColor: 'transparent',\n    borderTopColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight,\n};\n\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm',\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'primary',\n    variant: 'subtle',\n  },\n};\n\n// AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4,\n  },\n};\n"]},"metadata":{},"sourceType":"script"}