{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _utils=require(\"./../../../utils\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _Center=require(\"../../composites/Center\");var _FormControl=require(\"../../composites/FormControl\");var _Box=_interopRequireDefault(require(\"../Box\"));var _toggle=require(\"@react-stately/toggle\");var _visuallyHidden=require(\"@react-aria/visually-hidden\");var _CheckboxGroup=require(\"./CheckboxGroup\");var _interactions=require(\"@react-native-aria/interactions\");var _checkbox=require(\"@react-native-aria/checkbox\");var _focus=require(\"@react-native-aria/focus\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _utils2=require(\"../../../theme/tools/utils\");var _utils3=require(\"../../../utils\");var _SizedIcon=_interopRequireDefault(require(\"./SizedIcon\"));var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Checkbox/Checkbox.web.tsx\";var Checkbox=function Checkbox(_ref2,ref){var wrapperRef=_ref2.wrapperRef,props=(0,_objectWithoutProperties2.default)(_ref2,[\"wrapperRef\"]);var formControlContext=(0,_FormControl.useFormControlContext)();var _combineContextAndPro=(0,_utils3.combineContextAndProps)(formControlContext,props),isInvalid=_combineContextAndPro.isInvalid,isReadOnly=_combineContextAndPro.isReadOnly,isIndeterminate=_combineContextAndPro.isIndeterminate,combinedProps=(0,_objectWithoutProperties2.default)(_combineContextAndPro,[\"isInvalid\",\"isReadOnly\",\"isIndeterminate\"]);var checkboxGroupContext=_react.default.useContext(_CheckboxGroup.CheckboxGroupContext);var _ref=_react.default.useRef();var mergedRef=(0,_utils.mergeRefs)([ref,_ref]);var state=(0,_toggle.useToggleState)((0,_extends2.default)({},props,{defaultSelected:props.defaultIsChecked,isSelected:props.isChecked}));var groupState=(0,_react.useContext)(_CheckboxGroup.CheckboxGroupContext);var _useHover=(0,_interactions.useHover)({},_ref),isHovered=_useHover.isHovered;var _ref3=groupState?(0,_checkbox.useCheckboxGroupItem)((0,_extends2.default)({},combinedProps,{'aria-label':combinedProps.accessibilityLabel,'value':combinedProps.value}),groupState.state,mergedRef):(0,_checkbox.useCheckbox)((0,_extends2.default)({},combinedProps,{'aria-label':combinedProps.accessibilityLabel}),state,mergedRef),inputProps=_ref3.inputProps;var isChecked=inputProps.checked,isDisabled=inputProps.disabled;var _useFocusRing=(0,_focus.useFocusRing)(),focusProps=_useFocusRing.focusProps,isFocusVisible=_useFocusRing.isFocusVisible;var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Checkbox',(0,_extends2.default)({},checkboxGroupContext,combinedProps),{isInvalid:isInvalid,isReadOnly:isReadOnly,isFocusVisible:isFocusVisible,isDisabled:isDisabled,isIndeterminate:isIndeterminate,isChecked:isChecked,isHovered:isHovered}),icon=_usePropsResolution.icon,_interactionBox=_usePropsResolution._interactionBox,_icon=_usePropsResolution._icon,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"icon\",\"_interactionBox\",\"_icon\"]);var _extractInObject=(0,_utils2.extractInObject)(resolvedProps,[].concat((0,_toConsumableArray2.default)(_utils2.stylingProps.margin),(0,_toConsumableArray2.default)(_utils2.stylingProps.layout),(0,_toConsumableArray2.default)(_utils2.stylingProps.flexbox),(0,_toConsumableArray2.default)(_utils2.stylingProps.position),['_text'])),_extractInObject2=(0,_slicedToArray2.default)(_extractInObject,2),layoutProps=_extractInObject2[0],nonLayoutProps=_extractInObject2[1];var component=_react.default.createElement(_Box.default,(0,_extends2.default)({},layoutProps,{opacity:isDisabled?0.4:1,cursor:isDisabled?'not-allowed':'pointer',__self:_this,__source:{fileName:_jsxFileName,lineNumber:98,columnNumber:5}}),_react.default.createElement(_Center.Center,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:103,columnNumber:7}},_react.default.createElement(_Box.default,(0,_extends2.default)({},_interactionBox,{style:{transition:'height 200ms, width 200ms'},h:isFocusVisible||isHovered||isChecked||isInvalid?'200%':'100%',w:isFocusVisible||isHovered||isChecked||isInvalid?'200%':'100%',zIndex:-1,__self:_this,__source:{fileName:_jsxFileName,lineNumber:105,columnNumber:9}})),_react.default.createElement(_Center.Center,(0,_extends2.default)({},nonLayoutProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:124,columnNumber:9}}),_react.default.createElement(_SizedIcon.default,{icon:icon,_icon:_icon,isChecked:isChecked,__self:_this,__source:{fileName:_jsxFileName,lineNumber:126,columnNumber:11}}))),resolvedProps==null?void 0:resolvedProps.children);if((0,_useHasResponsiveProps.useHasResponsiveProps)(resolvedProps)){return null;}return _react.default.createElement(_Box.default,{accessibilityRole:\"label\",ref:(0,_utils.mergeRefs)([wrapperRef,_ref]),__self:_this,__source:{fileName:_jsxFileName,lineNumber:138,columnNumber:5}},_react.default.createElement(_visuallyHidden.VisuallyHidden,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:143,columnNumber:7}},_react.default.createElement(\"input\",(0,_extends2.default)({},inputProps,focusProps,{ref:mergedRef,__self:_this,__source:{fileName:_jsxFileName,lineNumber:144,columnNumber:9}}))),component);};var _default=(0,_react.memo)((0,_react.forwardRef)(Checkbox));exports.default=_default;","map":{"version":3,"sources":["Checkbox.web.tsx"],"names":["Checkbox","wrapperRef","props","formControlContext","isInvalid","isReadOnly","isIndeterminate","combinedProps","checkboxGroupContext","React","CheckboxGroupContext","_ref","mergedRef","state","defaultSelected","isSelected","groupState","isHovered","inputProps","isChecked","isDisabled","focusProps","isFocusVisible","icon","_interactionBox","_icon","resolvedProps","layoutProps","nonLayoutProps","stylingProps","component","transition"],"mappings":"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","sourcesContent":["import React, { useContext, memo, forwardRef } from 'react';\nimport { mergeRefs } from './../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Center } from '../../composites/Center';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport type { ICheckboxProps } from './types';\nimport { useToggleState } from '@react-stately/toggle';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useCheckbox, useCheckboxGroupItem } from '@react-native-aria/checkbox';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { combineContextAndProps } from '../../../utils';\nimport SizedIcon from './SizedIcon';\n\nconst Checkbox = ({ wrapperRef, ...props }: ICheckboxProps, ref: any) => {\n  const formControlContext = useFormControlContext();\n\n  const {\n    isInvalid,\n    isReadOnly,\n    isIndeterminate,\n    ...combinedProps\n  } = combineContextAndProps(formControlContext, props);\n\n  const checkboxGroupContext = React.useContext(CheckboxGroupContext);\n\n  const _ref = React.useRef();\n  const mergedRef = mergeRefs([ref, _ref]);\n\n  const state = useToggleState({\n    ...props,\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked,\n  });\n  const groupState = useContext(CheckboxGroupContext);\n  const { isHovered } = useHover({}, _ref);\n\n  // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n  const { inputProps } = groupState\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckboxGroupItem(\n        {\n          ...combinedProps,\n          'aria-label': combinedProps.accessibilityLabel,\n          'value': combinedProps.value,\n        },\n        groupState.state,\n        //@ts-ignore\n        mergedRef\n      )\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckbox(\n        {\n          ...combinedProps,\n          'aria-label': combinedProps.accessibilityLabel,\n        },\n        state,\n        //@ts-ignore\n        mergedRef\n      );\n\n  const { checked: isChecked, disabled: isDisabled } = inputProps;\n\n  const { focusProps, isFocusVisible } = useFocusRing();\n\n  const { icon, _interactionBox, _icon, ...resolvedProps } = usePropsResolution(\n    'Checkbox',\n    {\n      ...checkboxGroupContext,\n      ...combinedProps,\n    },\n    {\n      isInvalid,\n      isReadOnly,\n      isFocusVisible,\n      isDisabled,\n      isIndeterminate,\n      isChecked,\n      isHovered,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    '_text',\n  ]);\n\n  const component = (\n    <Box\n      {...layoutProps}\n      opacity={isDisabled ? 0.4 : 1}\n      cursor={isDisabled ? 'not-allowed' : 'pointer'}\n    >\n      <Center>\n        {/* Interaction Box */}\n        <Box\n          {..._interactionBox}\n          style={{\n            // @ts-ignore - only for web\"\n            transition: 'height 200ms, width 200ms',\n          }}\n          h={\n            isFocusVisible || isHovered || isChecked || isInvalid\n              ? '200%'\n              : '100%'\n          }\n          w={\n            isFocusVisible || isHovered || isChecked || isInvalid\n              ? '200%'\n              : '100%'\n          }\n          zIndex={-1}\n        />\n        {/* Checkbox */}\n        <Center {...nonLayoutProps}>\n          {/* {iconResolver()} */}\n          <SizedIcon icon={icon} _icon={_icon} isChecked={isChecked} />\n        </Center>\n      </Center>\n      {/* Label */}\n      {resolvedProps?.children}\n    </Box>\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n  return (\n    <Box\n      // @ts-ignore - RN web supports accessibilityRole=\"label\"\n      accessibilityRole=\"label\"\n      ref={mergeRefs([wrapperRef, _ref])}\n    >\n      <VisuallyHidden>\n        <input {...inputProps} {...focusProps} ref={mergedRef} />\n      </VisuallyHidden>\n\n      {component}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Checkbox));\n"]},"metadata":{},"sourceType":"script"}