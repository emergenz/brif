{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.Hidden=Hidden;exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=require(\"react\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _hooks=require(\"../../../hooks\");var _hooks2=require(\"../../../core/color-mode/hooks\");var _reactNative=require(\"react-native-web/dist/index\");function Hidden(_ref){var children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\"]);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Hidden',props,{ignoreProps:['only','platform']}),from=_usePropsResolution.from,till=_usePropsResolution.till,only=_usePropsResolution.only,platform=_usePropsResolution.platform,colorMode=_usePropsResolution.colorMode;var _useTheme=(0,_hooks.useTheme)(),breakpoints=_useTheme.breakpoints;var currentColorMode=(0,_hooks2.useColorMode)();var breakpointValueObject=Object.keys(breakpoints).reduce(function(obj,val){obj[val]=val;return obj;},{});var breakpointValue=(0,_hooks.useBreakpointValue)(breakpointValueObject);var _useToken=(0,_hooks.useToken)('breakpoints',[breakpointValue]),_useToken2=(0,_slicedToArray2.default)(_useToken,1),currentBreakpointValue=_useToken2[0];var _useToken3=(0,_hooks.useToken)('breakpoints',[from]),_useToken4=(0,_slicedToArray2.default)(_useToken3,1),fromBreakPointValue=_useToken4[0];var _useToken5=(0,_hooks.useToken)('breakpoints',[till]),_useToken6=(0,_slicedToArray2.default)(_useToken5,1),tillBreakPointValue=_useToken6[0];if(!from&&!till&&!only&&!colorMode&&!platform){return null;}else if(from&&till&&currentBreakpointValue>=fromBreakPointValue&&currentBreakpointValue<tillBreakPointValue){return null;}else if(from&&!till&&currentBreakpointValue>=fromBreakPointValue){return null;}else if(till&&!from&&currentBreakpointValue<tillBreakPointValue){return null;}else if(Array.isArray(only)&&only.includes(breakpointValue)||only===breakpointValue){return null;}else if(Array.isArray(platform)&&platform.includes(_reactNative.Platform.OS)||platform===_reactNative.Platform.OS){return null;}else if(colorMode===currentColorMode.colorMode){return null;}return children;}var _default=(0,_react.memo)(Hidden);exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["children","props","from","till","only","platform","colorMode","ignoreProps","breakpoints","currentColorMode","breakpointValueObject","Object","obj","breakpointValue","currentBreakpointValue","fromBreakPointValue","tillBreakPointValue","Array","Platform"],"mappings":"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","sourcesContent":["import { memo } from 'react';\nimport type { IHiddenProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useBreakpointValue, useTheme, useToken } from '../../../hooks';\nimport { useColorMode } from '../../../core/color-mode/hooks';\nimport { Platform } from 'react-native';\n\nexport function Hidden({ children, ...props }: IHiddenProps) {\n  const { from, till, only, platform, colorMode } = usePropsResolution(\n    'Hidden',\n    props,\n    {\n      ignoreProps: ['only', 'platform'],\n    }\n  );\n  const { breakpoints } = useTheme();\n  const currentColorMode = useColorMode();\n\n  const breakpointValueObject = Object.keys(breakpoints).reduce(\n    (obj: any, val: string) => {\n      obj[val] = val;\n      return obj;\n    },\n    {}\n  );\n  const breakpointValue = useBreakpointValue(breakpointValueObject);\n  const [currentBreakpointValue] = useToken('breakpoints', [breakpointValue]);\n  const [fromBreakPointValue] = useToken('breakpoints', [from]);\n  const [tillBreakPointValue] = useToken('breakpoints', [till]);\n\n  //if no prop is passed, it will hide the element wrapped with hidden\n  if (!from && !till && !only && !colorMode && !platform) {\n    return null;\n  }\n\n  //if from and till prop exists, it will hide the element wrapped accordingly\n  else if (\n    from &&\n    till &&\n    currentBreakpointValue >= fromBreakPointValue &&\n    currentBreakpointValue < tillBreakPointValue\n  ) {\n    return null;\n  }\n\n  //if from prop exists, it will hide the element wrapped starting from that breakpoint.\n  else if (from && !till && currentBreakpointValue >= fromBreakPointValue) {\n    return null;\n  }\n\n  //if till prop exists, it will hide the element wrapped starting from  0 till that breakpoint.\n  else if (till && !from && currentBreakpointValue < tillBreakPointValue) {\n    return null;\n  }\n\n  //if only prop exists and is array, check that array consists current breakpoint value, and if that exists, hide on that breakpoint to next breakpoint.\n  // if only prop is string, hide on that breakpoint to next breakpoint.\n  else if (\n    (Array.isArray(only) && only.includes(breakpointValue)) ||\n    only === breakpointValue\n  ) {\n    return null;\n  }\n  //if platform prop exists and is array, check that array consists current platform value, and if that exists, hide on that platform.\n  // if platform prop is string, hide on that platform.\n  else if (\n    (Array.isArray(platform) && platform.includes(Platform.OS)) ||\n    platform === Platform.OS\n  ) {\n    return null;\n  }\n  //if colormode prop is valid string, hide on that colormode.\n  else if (colorMode === currentColorMode.colorMode) {\n    return null;\n  }\n  return children;\n}\n\nexport default memo(Hidden);\nexport type { IHiddenProps };\n"]},"metadata":{},"sourceType":"script"}