{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _Box=_interopRequireDefault(require(\"./../../primitives/Box\"));var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Divider/index.tsx\";var Divider=function Divider(props,ref){var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Divider',props,{},{resolveResponsively:['thickness']}),orientation=_usePropsResolution.orientation,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"orientation\"]);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Box.default,(0,_extends2.default)({},resolvedProps,{ref:ref,\"aria-orientation\":orientation,accessibilityRole:_reactNative.Platform.OS==='web'?'separator':undefined,__self:_this,__source:{fileName:_jsxFileName,lineNumber:20,columnNumber:5}}));};var _default=(0,_react.memo)((0,_react.forwardRef)(Divider));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["Divider","orientation","resolvedProps","resolveResponsively","Platform"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,mIAEA,GAAMA,CAAAA,OAAO,CAAPA,QAAAA,CAAAA,OAAAA,CAAU,KAAVA,CAAU,GAAVA,CAA+C,CAAA,GAAA,CAAA,mBAAA,CACT,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAIxC,CAAEG,mBAAmB,CAAE,CAL0B,WAK1B,CAAvB,CAJwC,CADS,CAC3CF,WAD2C,CAAA,mBAAA,CAAA,WAAA,CAC3BC,aAD2B,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,aAAA,CAAA,CAAA,CAQnD,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,aAAA,CAAA,CAEE,GAAG,CAFL,GAAA,CAGE,mBAHF,WAAA,CAKE,iBAAiB,CAAEE,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAAA,KAAAA,CAAAA,WAAAA,CALrB,SAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CADF,CACE,CAAA,CAAA,CAAA,CADF,CAXF,CAAA,C,aAsBe,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,OAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from './../../primitives/Box';\nimport type { IDividerProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Divider = (props: IDividerProps, ref?: any) => {\n  const { orientation, ...resolvedProps } = usePropsResolution(\n    'Divider',\n    props,\n    {},\n    { resolveResponsively: ['thickness'] }\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      {...resolvedProps}\n      ref={ref}\n      aria-orientation={orientation}\n      //@ts-ignore web only role\n      accessibilityRole={Platform.OS === 'web' ? 'separator' : undefined}\n    />\n  );\n};\n\nexport default memo(forwardRef(Divider));\n"]},"metadata":{},"sourceType":"script"}