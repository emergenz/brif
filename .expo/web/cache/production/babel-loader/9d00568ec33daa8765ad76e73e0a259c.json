{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.usePropsResolutionTest=usePropsResolutionTest;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _lodash=_interopRequireDefault(require(\"lodash.get\"));var _lodash2=_interopRequireDefault(require(\"lodash.merge\"));var _reactNative=require(\"react-native-web/dist/index\");var _useNativeBase2=require(\"../useNativeBase\");var _colorMode=require(\"../../core/color-mode\");var _tools=require(\"../../theme/tools\");var _useContrastText=require(\"../useContrastText\");var _useBreakpointResolvedProps=require(\"../useBreakpointResolvedProps\");var _propsFlattenerTest=require(\"./propsFlattenerTest\");var SPREAD_PROP_SPECIFICITY_ORDER=['p','padding','px','py','pt','pb','pl','pr','paddingTop','paddingBottom','paddingLeft','paddingRight','m','margin','mx','my','mt','mb','ml','mr','marginTop','marginBottom','marginLeft','marginRight'];var FINAL_SPREAD_PROPS=['paddingTop','paddingBottom','paddingLeft','paddingRight','marginTop','marginBottom','marginLeft','marginRight'];var MARGIN_MAP={mx:['marginRight','marginLeft'],my:['marginTop','marginBottom'],mt:['marginTop'],mb:['marginBottom'],mr:['marginRight'],ml:['marginLeft']};MARGIN_MAP.margin=[].concat((0,_toConsumableArray2.default)(MARGIN_MAP.mx),(0,_toConsumableArray2.default)(MARGIN_MAP.my));MARGIN_MAP.m=MARGIN_MAP.margin;MARGIN_MAP.marginTop=MARGIN_MAP.mt;MARGIN_MAP.marginBottom=MARGIN_MAP.mb;MARGIN_MAP.marginLeft=MARGIN_MAP.ml;MARGIN_MAP.marginRight=MARGIN_MAP.mr;var PADDING_MAP={px:['paddingRight','paddingLeft'],py:['paddingTop','paddingBottom'],pt:['paddingTop'],pb:['paddingBottom'],pr:['paddingRight'],pl:['paddingLeft']};PADDING_MAP.padding=[].concat((0,_toConsumableArray2.default)(PADDING_MAP.px),(0,_toConsumableArray2.default)(PADDING_MAP.py));PADDING_MAP.p=PADDING_MAP.padding;PADDING_MAP.paddingTop=PADDING_MAP.pt;PADDING_MAP.paddingBottom=PADDING_MAP.pb;PADDING_MAP.paddingLeft=PADDING_MAP.pl;PADDING_MAP.paddingRight=PADDING_MAP.pr;var SPREAD_PROP_SPECIFICITY_MAP=(0,_extends2.default)({},PADDING_MAP,MARGIN_MAP);function propsSpreader(incomingProps,incomingSpecifity){var flattenedDefaultProps=(0,_extends2.default)({},incomingProps);var specificity={};SPREAD_PROP_SPECIFICITY_ORDER.forEach(function(prop){if(prop in flattenedDefaultProps){var val=incomingProps[prop]||flattenedDefaultProps[prop];if(!FINAL_SPREAD_PROPS.includes(prop)){delete flattenedDefaultProps[prop];specificity[prop]=incomingSpecifity[prop];}SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(function(newProp){if((0,_propsFlattenerTest.compareSpecificity)(specificity[newProp],specificity[prop])){specificity[newProp]=incomingSpecifity[prop];flattenedDefaultProps[newProp]=val;}});}});return(0,_lodash2.default)({},flattenedDefaultProps);}function usePropsResolutionTest(component,incomingProps,state,config){var _flattenProps$bg,_flattenProps$backgro,_flattenProps$bgColor,_flattenProps$backgro2,_ref,_flattenProps$bg2,_flattenProps,_flattenProps$_text,_flattenProps2,_flattenProps2$_text;var _extractInObject=(0,_tools.extractInObject)(incomingProps,['children','onPress','icon','onOpen','onClose'].concat((config==null?void 0:config.ignoreProps)||[])),_extractInObject2=(0,_slicedToArray2.default)(_extractInObject,2),ignoredProps=_extractInObject2[0],cleanIncomingProps=_extractInObject2[1];var resolveResponsively=['colorScheme','size','variant'].concat((0,_toConsumableArray2.default)((config==null?void 0:config.resolveResponsively)||[]));var _useNativeBase=(0,_useNativeBase2.useNativeBase)(),theme=_useNativeBase.theme;var colorModeProps=(0,_colorMode.useColorMode)();var componentTheme=(0,_lodash.default)(theme,\"components.\"+component,{});var incomingWithDefaultProps=(0,_lodash2.default)({},componentTheme.defaultProps||{},cleanIncomingProps);var _propsFlattener=(0,_propsFlattenerTest.propsFlattener)({props:incomingWithDefaultProps,platform:_reactNative.Platform.OS,colormode:colorModeProps.colorMode,state:state||{},previouslyFlattenProps:{}},2),_propsFlattener2=(0,_slicedToArray2.default)(_propsFlattener,2),flattenProps=_propsFlattener2[0],specificityMap=_propsFlattener2[1];var responsiveProps={};resolveResponsively.map(function(propsName){if(flattenProps[propsName]){responsiveProps[propsName]=flattenProps[propsName];}});var responsivelyResolvedProps=(0,_useBreakpointResolvedProps.useBreakpointResolvedProps)(responsiveProps);flattenProps=(0,_extends2.default)({},flattenProps,responsivelyResolvedProps);var componentBaseStyle={},flattenBaseStyle,baseSpecificityMap;if(componentTheme.baseStyle){componentBaseStyle=typeof componentTheme.baseStyle!=='function'?componentTheme.baseStyle:componentTheme.baseStyle((0,_extends2.default)({theme:theme},flattenProps,colorModeProps));var _propsFlattener3=(0,_propsFlattenerTest.propsFlattener)({props:componentBaseStyle,platform:_reactNative.Platform.OS,colormode:colorModeProps.colorMode,state:state||{},currentSpecificityMap:specificityMap,previouslyFlattenProps:flattenProps},1);var _propsFlattener4=(0,_slicedToArray2.default)(_propsFlattener3,2);flattenBaseStyle=_propsFlattener4[0];baseSpecificityMap=_propsFlattener4[1];}var variant=flattenProps.variant;var componentVariantProps={},flattenVariantStyle,variantSpecificityMap;if(variant&&componentTheme.variants&&componentTheme.variants[variant]){componentVariantProps=typeof componentTheme.variants[variant]!=='function'?componentTheme.variants[variant]:componentTheme.variants[variant]((0,_extends2.default)({theme:theme},flattenProps,colorModeProps));var _propsFlattener5=(0,_propsFlattenerTest.propsFlattener)({props:componentVariantProps,platform:_reactNative.Platform.OS,colormode:colorModeProps.colorMode,state:state||{},currentSpecificityMap:baseSpecificityMap||specificityMap,previouslyFlattenProps:flattenProps},1);var _propsFlattener6=(0,_slicedToArray2.default)(_propsFlattener5,2);flattenVariantStyle=_propsFlattener6[0];variantSpecificityMap=_propsFlattener6[1];flattenProps.variant=undefined;}var size=flattenProps.size;var componentSizeProps={},flattenSizeStyle,sizeSpecificityMap;if(size&&componentTheme.sizes&&componentTheme.sizes[size]){if(typeof componentTheme.sizes[size]==='string'||typeof componentTheme.sizes[size]==='number'){flattenProps.size=componentTheme.sizes[size];}else if(typeof componentTheme.sizes[size]==='function'){flattenProps.size=undefined;componentSizeProps=componentTheme.sizes[size]((0,_extends2.default)({theme:theme},flattenProps,colorModeProps));}else{flattenProps.size=undefined;componentSizeProps=componentTheme.sizes[size];}var _propsFlattener7=(0,_propsFlattenerTest.propsFlattener)({props:componentSizeProps,platform:_reactNative.Platform.OS,colormode:colorModeProps.colorMode,state:state||{},currentSpecificityMap:variantSpecificityMap||baseSpecificityMap||specificityMap,previouslyFlattenProps:flattenProps},1);var _propsFlattener8=(0,_slicedToArray2.default)(_propsFlattener7,2);flattenSizeStyle=_propsFlattener8[0];sizeSpecificityMap=_propsFlattener8[1];}var defaultStyles=(0,_lodash2.default)({},flattenBaseStyle,flattenVariantStyle,flattenSizeStyle);for(var prop in defaultStyles){delete flattenProps[prop];}var defaultSpecificity=(0,_lodash2.default)({},specificityMap,baseSpecificityMap,variantSpecificityMap,sizeSpecificityMap);flattenProps=propsSpreader((0,_extends2.default)({},defaultStyles,flattenProps),defaultSpecificity);var ignore=[];if((_flattenProps$bg=flattenProps.bg)!=null&&_flattenProps$bg.linearGradient||(_flattenProps$backgro=flattenProps.background)!=null&&_flattenProps$backgro.linearGradient||(_flattenProps$bgColor=flattenProps.bgColor)!=null&&_flattenProps$bgColor.linearGradient||(_flattenProps$backgro2=flattenProps.backgroundColor)!=null&&_flattenProps$backgro2.linearGradient){var _flattenProps$backgro3,_flattenProps$bgColor2,_flattenProps$backgro4;var bgProp='bg';if((_flattenProps$backgro3=flattenProps.background)!=null&&_flattenProps$backgro3.linearGradient){bgProp='background';}else if((_flattenProps$bgColor2=flattenProps.bgColor)!=null&&_flattenProps$bgColor2.linearGradient){bgProp='bgColor';}else if((_flattenProps$backgro4=flattenProps.backgroundColor)!=null&&_flattenProps$backgro4.linearGradient){bgProp='backgroundColor';}flattenProps[bgProp].linearGradient.colors=flattenProps[bgProp].linearGradient.colors.map(function(color){return(0,_lodash.default)(theme.colors,color,color);});ignore=['bg','background','backgroundColor','bgColor'];}var _extractInObject3=(0,_tools.extractInObject)(flattenProps,ignore),_extractInObject4=(0,_slicedToArray2.default)(_extractInObject3,1),gradientProps=_extractInObject4[0];var bgColor=(_ref=(_flattenProps$bg2=flattenProps.bg)!=null?_flattenProps$bg2:flattenProps.backgroundColor)!=null?_ref:flattenProps.bgColor;var contrastTextColor=(0,_useContrastText.useContrastText)(bgColor,(_flattenProps=flattenProps)==null?void 0:(_flattenProps$_text=_flattenProps._text)==null?void 0:_flattenProps$_text.color);flattenProps._text=contrastTextColor&&((_flattenProps2=flattenProps)==null?void 0:(_flattenProps2$_text=_flattenProps2._text)==null?void 0:_flattenProps2$_text.color)===undefined?(0,_extends2.default)({color:contrastTextColor},flattenProps._text):flattenProps._text;var resolvedProps=(0,_tools.omitUndefined)((0,_extends2.default)({},flattenProps,ignoredProps,gradientProps));return resolvedProps;}","map":{"version":3,"sources":["usePropsResolutionTest.tsx"],"names":["SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","PADDING_MAP","px","py","pt","pb","pr","pl","SPREAD_PROP_SPECIFICITY_MAP","flattenedDefaultProps","specificity","prop","val","incomingProps","incomingSpecifity","ignoredProps","cleanIncomingProps","resolveResponsively","theme","colorModeProps","componentTheme","incomingWithDefaultProps","flattenProps","specificityMap","props","platform","Platform","colormode","state","previouslyFlattenProps","responsiveProps","responsivelyResolvedProps","componentBaseStyle","flattenBaseStyle","baseSpecificityMap","currentSpecificityMap","variant","componentVariantProps","flattenVariantStyle","variantSpecificityMap","size","componentSizeProps","flattenSizeStyle","sizeSpecificityMap","defaultStyles","defaultSpecificity","propsSpreader","ignore","bgProp","gradientProps","bgColor","contrastTextColor","color","resolvedProps"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useContrastText } from '../useContrastText';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattenerTest';\n\nconst SPREAD_PROP_SPECIFICITY_ORDER = [\n  'p',\n  'padding',\n  'px',\n  'py',\n  'pt',\n  'pb',\n  'pl',\n  'pr',\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'm',\n  'margin',\n  'mx',\n  'my',\n  'mt',\n  'mb',\n  'ml',\n  'mr',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst FINAL_SPREAD_PROPS = [\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst MARGIN_MAP: any = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft'],\n};\n\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\n\nconst PADDING_MAP: any = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft'],\n};\n\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nconst SPREAD_PROP_SPECIFICITY_MAP: any = {\n  ...PADDING_MAP,\n  ...MARGIN_MAP,\n};\n\nfunction propsSpreader(incomingProps: any, incomingSpecifity: any) {\n  const flattenedDefaultProps: any = { ...incomingProps };\n  const specificity: any = {};\n\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach((prop) => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach((newProp: string) => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n\n  return merge({}, flattenedDefaultProps);\n}\n\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\nexport function usePropsResolutionTest(\n  component: string,\n  incomingProps: any,\n  state?: any,\n  config?: any\n) {\n  const [ignoredProps, cleanIncomingProps] = extractInObject(\n    incomingProps,\n    ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat(\n      config?.ignoreProps || []\n    )\n  );\n  const resolveResponsively = [\n    'colorScheme',\n    'size',\n    'variant',\n    ...(config?.resolveResponsively || []),\n  ];\n\n  const { theme } = useNativeBase();\n  const colorModeProps = useColorMode();\n\n  const componentTheme = get(theme, `components.${component}`, {});\n\n  // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = merge(\n    {},\n    componentTheme.defaultProps || {},\n    cleanIncomingProps\n  );\n  // STEP 2: flatten them\n\n  let [flattenProps, specificityMap] = propsFlattener(\n    {\n      props: incomingWithDefaultProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      previouslyFlattenProps: {},\n    },\n    2\n  );\n\n  // STEP 2.5: resolving responsive props\n  const responsiveProps = {};\n  resolveResponsively.map((propsName) => {\n    if (flattenProps[propsName]) {\n      // @ts-ignore\n      responsiveProps[propsName] = flattenProps[propsName];\n    }\n  });\n\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n\n  flattenProps = {\n    ...flattenProps,\n    ...responsivelyResolvedProps,\n  };\n  // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n\n  // NOTE: Resoloving baseStyle\n  let componentBaseStyle = {},\n    flattenBaseStyle,\n    baseSpecificityMap;\n  if (componentTheme.baseStyle) {\n    componentBaseStyle =\n      typeof componentTheme.baseStyle !== 'function'\n        ? componentTheme.baseStyle\n        : componentTheme.baseStyle({\n            theme,\n            ...flattenProps,\n            ...colorModeProps,\n          });\n\n    [flattenBaseStyle, baseSpecificityMap] = propsFlattener(\n      {\n        props: componentBaseStyle,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap: specificityMap,\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n  }\n\n  // NOTE: Resolving variants\n\n  const variant = flattenProps.variant;\n\n  let componentVariantProps = {},\n    flattenVariantStyle,\n    variantSpecificityMap;\n  // Extracting props from variant\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps =\n      typeof componentTheme.variants[variant] !== 'function'\n        ? componentTheme.variants[variant]\n        : componentTheme.variants[variant]({\n            theme,\n            ...flattenProps,\n            ...colorModeProps,\n          });\n\n    [flattenVariantStyle, variantSpecificityMap] = propsFlattener(\n      {\n        props: componentVariantProps,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap: baseSpecificityMap || specificityMap,\n        // NOTE: Ideally flattenBaseStyle and flattenProps should be deeply merged to create previouslyFlattenProps.\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n\n    // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n    flattenProps.variant = undefined;\n  }\n\n  // NOTE: Resolving size\n\n  const size = flattenProps.size;\n\n  let componentSizeProps = {},\n    flattenSizeStyle,\n    sizeSpecificityMap;\n  // Extracting props from size\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (\n      typeof componentTheme.sizes[size] === 'string' ||\n      typeof componentTheme.sizes[size] === 'number'\n    ) {\n      flattenProps.size = componentTheme.sizes[size];\n      //@ts-ignore\n      // componentSizeProps.size = componentTheme.sizes[size];\n    }\n    // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size]({\n        theme,\n        ...flattenProps,\n        ...colorModeProps,\n      });\n    }\n    // Type - sizes: {lg: {px: 1}}. Refer button theme\n    else {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    [flattenSizeStyle, sizeSpecificityMap] = propsFlattener(\n      {\n        props: componentSizeProps,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap:\n          variantSpecificityMap || baseSpecificityMap || specificityMap,\n        previouslyFlattenProps: flattenProps,\n      },\n      1\n    );\n  }\n\n  // // STEP 4: merge\n  const defaultStyles = merge(\n    {},\n    flattenBaseStyle,\n    flattenVariantStyle,\n    flattenSizeStyle\n  );\n\n  for (const prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge(\n    {},\n    specificityMap,\n    baseSpecificityMap,\n    variantSpecificityMap,\n    sizeSpecificityMap\n  );\n\n  flattenProps = propsSpreader(\n    { ...defaultStyles, ...flattenProps },\n    defaultSpecificity\n  );\n\n  // // STEP 5: linear Grad and contrastText\n  let ignore: any = [];\n  if (\n    flattenProps.bg?.linearGradient ||\n    flattenProps.background?.linearGradient ||\n    flattenProps.bgColor?.linearGradient ||\n    flattenProps.backgroundColor?.linearGradient\n  ) {\n    let bgProp = 'bg';\n    if (flattenProps.background?.linearGradient) {\n      bgProp = 'background';\n    } else if (flattenProps.bgColor?.linearGradient) {\n      bgProp = 'bgColor';\n    } else if (flattenProps.backgroundColor?.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n    flattenProps[bgProp].linearGradient.colors = flattenProps[\n      bgProp\n    ].linearGradient.colors.map((color: string) => {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  }\n  // // NOTE: seprating bg props when linearGardiant is available\n  const [gradientProps] = extractInObject(flattenProps, ignore);\n\n  const bgColor =\n    flattenProps.bg ?? flattenProps.backgroundColor ?? flattenProps.bgColor;\n\n  const contrastTextColor = useContrastText(\n    bgColor,\n    flattenProps?._text?.color\n  );\n\n  flattenProps._text =\n    contrastTextColor && flattenProps?._text?.color === undefined\n      ? {\n          color: contrastTextColor,\n          ...flattenProps._text,\n        }\n      : flattenProps._text;\n\n  const resolvedProps = omitUndefined({\n    ...flattenProps,\n    ...ignoredProps,\n    ...gradientProps,\n  });\n  // STEP 6: Return\n\n  // flattenProps = {};\n  // propertyDepth = {};\n\n  return resolvedProps;\n}\n"]},"metadata":{},"sourceType":"script"}