{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _slider=require(\"@react-stately/slider\");var _hooks=require(\"../../../hooks\");var _Box=_interopRequireDefault(require(\"../Box\"));var _Context=require(\"./Context\");var _slider2=require(\"@react-native-aria/slider\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Slider/Slider.tsx\";function Slider(_ref,ref){var _props$accessibilityL;var isDisabled=_ref.isDisabled,isReadOnly=_ref.isReadOnly,props=(0,_objectWithoutProperties2.default)(_ref,[\"isDisabled\",\"isReadOnly\"]);var newProps=(0,_extends2.default)({},props,{'aria-label':(_props$accessibilityL=props.accessibilityLabel)!=null?_props$accessibilityL:'Slider'});if(typeof props.value==='number'){newProps.value=[props.value];}if(typeof props.defaultValue==='number'){newProps.defaultValue=[props.defaultValue];}props=newProps;var _useLayout=(0,_hooks.useLayout)(),onLayout=_useLayout.onLayout,trackLayout=_useLayout.layout;var updatedProps=(0,_extends2.default)({},props);if(isReadOnly||isDisabled){updatedProps.isDisabled=true;}var state=(0,_slider.useSliderState)((0,_extends2.default)({},updatedProps,{numberFormatter:{format:function format(e){return e;}},minValue:props.minValue,maxValue:props.maxValue,onChange:function onChange(val){props.onChange&&props.onChange(val[0]);},onChangeEnd:function onChangeEnd(val){props.onChangeEnd&&props.onChangeEnd(val[0]);}}));var resolvedProps=(0,_hooks.usePropsResolution)('Slider',props,{isDisabled:isDisabled,isReadOnly:isReadOnly});var _useSlider=(0,_slider2.useSlider)(props,state,trackLayout),trackProps=_useSlider.trackProps;var wrapperStyle={height:props.orientation==='vertical'?'100%':undefined,width:props.orientation!=='vertical'?'100%':undefined};if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Context.SliderContext.Provider,{value:{trackLayout:trackLayout,state:state,orientation:props.orientation,isDisabled:isDisabled,isReversed:props.isReversed,colorScheme:props.colorScheme,trackProps:trackProps,isReadOnly:isReadOnly,onTrackLayout:onLayout,thumbSize:resolvedProps.thumbSize,sliderSize:resolvedProps.sliderSize},__self:this,__source:{fileName:_jsxFileName,lineNumber:72,columnNumber:5}},_react.default.createElement(_Box.default,(0,_extends2.default)({},wrapperStyle,{justifyContent:\"center\",ref:ref,alignItems:\"center\"},resolvedProps,{__self:this,__source:{fileName:_jsxFileName,lineNumber:87,columnNumber:7}}),_react.default.Children.map(props.children,function(child,index){if(child.displayName==='SliderThumb'){return _react.default.cloneElement(child,{index:index});}return child;})));}var _default=(0,_react.forwardRef)(Slider);exports.default=_default;","map":{"version":3,"sources":["Slider.tsx"],"names":["isDisabled","isReadOnly","props","newProps","onLayout","trackLayout","updatedProps","state","numberFormatter","format","minValue","maxValue","onChange","val","onChangeEnd","resolvedProps","trackProps","wrapperStyle","height","width","orientation","isReversed","colorScheme","onTrackLayout","thumbSize","sliderSize","React","child","index"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSliderState } from '@react-stately/slider';\nimport { useLayout } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ISliderProps } from './types';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useSlider } from '@react-native-aria/slider';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nfunction Slider({ isDisabled, isReadOnly, ...props }: ISliderProps, ref?: any) {\n  const newProps = {\n    ...props,\n    'aria-label': props.accessibilityLabel ?? 'Slider',\n  };\n\n  if (typeof props.value === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.value = [props.value];\n  }\n\n  if (typeof props.defaultValue === 'number') {\n    //@ts-ignore - React Native Aria slider accepts array of values\n    newProps.defaultValue = [props.defaultValue];\n  }\n\n  props = newProps;\n\n  const { onLayout, layout: trackLayout } = useLayout();\n  const updatedProps: ISliderProps = Object.assign({}, props);\n\n  if (isReadOnly || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  const state = useSliderState({\n    ...updatedProps,\n    //@ts-ignore\n    numberFormatter: { format: (e) => e },\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    onChange: (val: any) => {\n      props.onChange && props.onChange(val[0]);\n    },\n    onChangeEnd: (val: any) => {\n      props.onChangeEnd && props.onChangeEnd(val[0]);\n    },\n  });\n\n  const resolvedProps = usePropsResolution('Slider', props, {\n    isDisabled,\n    isReadOnly,\n  });\n\n  const { trackProps } = useSlider(\n    (props as unknown) as any,\n    state,\n    trackLayout\n  );\n\n  const wrapperStyle = {\n    height: props.orientation === 'vertical' ? '100%' : undefined,\n    width: props.orientation !== 'vertical' ? '100%' : undefined,\n  };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <SliderContext.Provider\n      value={{\n        trackLayout,\n        state,\n        orientation: props.orientation,\n        isDisabled: isDisabled,\n        isReversed: props.isReversed,\n        colorScheme: props.colorScheme,\n        trackProps,\n        isReadOnly: isReadOnly,\n        onTrackLayout: onLayout,\n        thumbSize: resolvedProps.thumbSize,\n        sliderSize: resolvedProps.sliderSize,\n      }}\n    >\n      <Box\n        {...wrapperStyle}\n        justifyContent=\"center\"\n        ref={ref}\n        alignItems=\"center\"\n        {...resolvedProps}\n      >\n        {React.Children.map(props.children, (child, index) => {\n          if (child.displayName === 'SliderThumb') {\n            return React.cloneElement(child as React.ReactElement, {\n              index,\n            });\n          }\n\n          return child;\n        })}\n      </Box>\n    </SliderContext.Provider>\n  );\n}\n\nexport default forwardRef(Slider);\n"]},"metadata":{},"sourceType":"script"}