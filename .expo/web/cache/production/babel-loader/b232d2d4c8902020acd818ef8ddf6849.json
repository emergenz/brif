{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Avatar/Badge.tsx\";var AvatarBadge=(0,_react.memo)((0,_react.forwardRef)(function(props,ref){var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('AvatarBadge',props),boxSize=_usePropsResolution.boxSize,newProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"boxSize\"]);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Box.default,(0,_extends2.default)({position:\"absolute\",right:0,bottom:0},newProps,{width:boxSize||3,height:boxSize||3,ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:15,columnNumber:7}}));}));AvatarBadge.displayName='AvatarBadge';var _default=AvatarBadge;exports.default=_default;","map":{"version":3,"sources":["Badge.tsx"],"names":["AvatarBadge","boxSize","newProps"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,CACA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,kIAEA,GAAMA,CAAAA,WAAW,CAAG,CAAA,EAAA,MAAA,CAAA,IAAA,EAClB,CAAA,EAAA,MAAA,CAAA,UAAA,EAAW,SAAA,KAAA,CAAA,GAAA,CAAyC,CAAA,GAAA,CAAA,mBAAA,CACjB,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,aAAA,CADiB,KACjB,CADiB,CAC1CC,OAD0C,CAAA,mBAAA,CAAA,OAAA,CAC9BC,QAD8B,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAGlD,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,QAAQ,CADV,UAAA,CAEE,KAAK,CAFP,CAAA,CAGE,MAAM,CAHR,CAAA,CAAA,CAAA,QAAA,CAAA,CAKE,KAAK,CAAED,OAAO,EALhB,CAAA,CAME,MAAM,CAAEA,OAAO,EANjB,CAAA,CAOE,GAAG,CAPL,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CADF,CACE,CAAA,CAAA,CAAA,CADF,CAPJ,CACE,CADkB,CAApB,CAqBAD,WAAW,CAAXA,WAAAA,CAAAA,aAAAA,C,aACeA,W","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarBadgeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AvatarBadge = memo(\n  forwardRef((props: IAvatarBadgeProps, ref?: any) => {\n    const { boxSize, ...newProps } = usePropsResolution('AvatarBadge', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <Box\n        position=\"absolute\"\n        right={0}\n        bottom={0}\n        {...newProps}\n        width={boxSize || 3}\n        height={boxSize || 3}\n        ref={ref}\n      />\n    );\n  })\n);\n\nAvatarBadge.displayName = 'AvatarBadge';\nexport default AvatarBadge as (props: IAvatarBadgeProps, ref?: any) => any;\n"]},"metadata":{},"sourceType":"script"}