{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _tools=require(\"./../tools\");var _reactNative=require(\"react-native-web/dist/index\");var baseStyle=function baseStyle(props){var primary=props.theme.colors.primary;var focusRing=_reactNative.Platform.OS==='web'?{boxShadow:primary[400]+\" 0px 0px 0px 3px\"}:{};return{borderRadius:'sm',_web:{cursor:props.isDisabled?'not-allowed':props.isLoading?'default':'pointer'},_focusVisible:{style:props.variant!=='unstyled'?(0,_extends2.default)({},focusRing):{}},_disabled:{opacity:0.5}};};function variantGhost(props){var colorScheme=props.colorScheme;return{bg:'transparent',_web:{outlineWidth:0},_hover:{bg:(0,_tools.transparentize)((0,_tools.mode)(colorScheme+\".200\",colorScheme+\".400\")(props),0.5)(props.theme)},_focusVisible:{bg:(0,_tools.transparentize)((0,_tools.mode)(colorScheme+\".200\",colorScheme+\".400\")(props),0.5)(props.theme)},_pressed:{bg:(0,_tools.transparentize)((0,_tools.mode)(colorScheme+\".200\",colorScheme+\".500\")(props),0.6)(props.theme)}};}function variantOutline(props){var colorScheme=props.colorScheme;return{borderWidth:'1',borderColor:colorScheme+\".300\",_icon:{color:(0,_tools.mode)(colorScheme+\".500\",colorScheme+\".300\")(props)},_web:{outlineWidth:0},_hover:{bg:(0,_tools.transparentize)((0,_tools.mode)(colorScheme+\".200\",colorScheme+\".400\")(props),0.5)(props.theme)},_focusVisible:{bg:(0,_tools.transparentize)((0,_tools.mode)(colorScheme+\".200\",colorScheme+\".400\")(props),0.5)(props.theme)},_pressed:{bg:(0,_tools.transparentize)((0,_tools.mode)(colorScheme+\".300\",colorScheme+\".500\")(props),0.6)(props.theme)}};}function variantSolid(props){var colorScheme=props.colorScheme;return{bg:colorScheme+\".500\",_web:{outlineWidth:0},_disabled:{bg:(0,_tools.mode)(\"trueGray.300\",\"trueGray.600\")(props)},_hover:{bg:colorScheme+\".600\"},_pressed:{bg:colorScheme+\".700\"},_focus:{bg:colorScheme+\".600\"},_icon:{color:(0,_tools.mode)('gray.50','gray.800')(props)}};}function variantUnstyled(){return{};}var variants={ghost:variantGhost,outline:variantOutline,solid:variantSolid,unstyled:variantUnstyled};var defaultProps={variant:'ghost',size:'md',colorScheme:'primary'};var sizes={lg:{p:3},md:{p:2},sm:{p:1}};var _default={baseStyle:baseStyle,variants:variants,sizes:sizes,defaultProps:defaultProps};exports.default=_default;","map":{"version":3,"sources":["icon-button.ts"],"names":["baseStyle","primary","props","focusRing","Platform","boxShadow","borderRadius","_web","cursor","_focusVisible","style","_disabled","opacity","colorScheme","bg","outlineWidth","_hover","_pressed","borderWidth","borderColor","_icon","color","_focus","variants","ghost","outline","solid","unstyled","defaultProps","variant","size","sizes","lg","p","md","sm"],"mappings":"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","sourcesContent":["import { Dict, mode, transparentize } from './../tools';\nimport { Platform } from 'react-native';\n\nconst baseStyle = (props: any) => {\n  const { primary } = props.theme.colors;\n  const focusRing =\n    Platform.OS === 'web'\n      ? { boxShadow: `${primary[400]} 0px 0px 0px 3px` }\n      : {};\n\n  return {\n    borderRadius: 'sm',\n    _web: {\n      cursor: props.isDisabled\n        ? 'not-allowed'\n        : props.isLoading\n        ? 'default'\n        : 'pointer',\n    },\n    _focusVisible: {\n      style: props.variant !== 'unstyled' ? { ...focusRing } : {},\n    },\n    _disabled: {\n      opacity: 0.5,\n    },\n  };\n};\n\nfunction variantGhost(props: Dict) {\n  const { colorScheme } = props;\n  return {\n    bg: 'transparent',\n    _web: {\n      outlineWidth: 0,\n    },\n    _hover: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.400`)(props),\n        0.5\n      )(props.theme),\n    },\n    _focusVisible: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.400`)(props),\n        0.5\n      )(props.theme),\n    },\n    _pressed: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.500`)(props),\n        0.6\n      )(props.theme),\n    },\n  };\n}\n\nfunction variantOutline(props: Dict) {\n  const { colorScheme } = props;\n  return {\n    borderWidth: '1',\n    borderColor: `${colorScheme}.300`,\n    _icon: {\n      color: mode(`${colorScheme}.500`, `${colorScheme}.300`)(props),\n    },\n    _web: {\n      outlineWidth: 0,\n    },\n    _hover: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.400`)(props),\n        0.5\n      )(props.theme),\n    },\n    _focusVisible: {\n      bg: transparentize(\n        mode(`${colorScheme}.200`, `${colorScheme}.400`)(props),\n        0.5\n      )(props.theme),\n    },\n    _pressed: {\n      bg: transparentize(\n        mode(`${colorScheme}.300`, `${colorScheme}.500`)(props),\n        0.6\n      )(props.theme),\n    },\n  };\n}\n\nfunction variantSolid(props: Dict) {\n  const { colorScheme } = props;\n  return {\n    bg: `${colorScheme}.500`,\n    _web: {\n      outlineWidth: 0,\n    },\n    _disabled: {\n      bg: mode(`trueGray.300`, `trueGray.600`)(props),\n    },\n    _hover: {\n      bg: `${colorScheme}.600`,\n    },\n    _pressed: {\n      bg: `${colorScheme}.700`,\n    },\n    _focus: {\n      bg: `${colorScheme}.600`,\n    },\n    _icon: {\n      color: mode('gray.50', 'gray.800')(props),\n    },\n  };\n}\n\nfunction variantUnstyled() {\n  return {};\n}\n\nconst variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  unstyled: variantUnstyled,\n};\n\nconst defaultProps = {\n  variant: 'ghost',\n  size: 'md',\n  colorScheme: 'primary',\n};\n\nconst sizes = {\n  lg: {\n    p: 3,\n  },\n  md: {\n    p: 2,\n  },\n  sm: {\n    p: 1,\n  },\n};\n\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"script"}