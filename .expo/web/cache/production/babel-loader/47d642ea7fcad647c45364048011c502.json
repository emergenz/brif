{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _theme=require(\"../../../theme\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _hooks=require(\"../../../hooks\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Spinner/index.tsx\";var Spinner=function Spinner(props,ref){var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Spinner',props),color=_usePropsResolution.color,size=_usePropsResolution.size,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"color\",\"size\"]);var resolvedColor=(0,_theme.getColor)(color,(0,_hooks.useTheme)().colors,(0,_hooks.useTheme)());if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_reactNative.ActivityIndicator,(0,_extends2.default)({accessible:true,accessibilityLabel:\"loading\"},resolvedProps,{color:resolvedColor,ref:ref,size:size,__self:_this,__source:{fileName:_jsxFileName,lineNumber:20,columnNumber:5}}));};var _default=(0,_react.memo)((0,_react.forwardRef)(Spinner));exports.default=_default;","map":{"version":3,"sources":["index.tsx"],"names":["Spinner","color","size","resolvedProps","resolvedColor"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,C,mIAEA,GAAMA,CAAAA,OAAO,CAAPA,QAAAA,CAAAA,OAAAA,CAAU,KAAVA,CAAU,GAAVA,CAA8C,CAAA,GAAA,CAAA,mBAAA,CACR,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,SAAA,CADQ,KACR,CADQ,CAC1CC,KAD0C,CAAA,mBAAA,CAAA,KAAA,CACnCC,IADmC,CAAA,mBAAA,CAAA,IAAA,CAC1BC,aAD0B,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAKlD,GAAMC,CAAAA,aAAa,CAAG,CAAA,EAAA,MAAA,CAAA,QAAA,EAAA,KAAA,CAAgB,CAAA,EAAA,MAAA,CAAA,QAAA,IAAhB,MAAA,CAAmC,CAAA,EAAA,MAAA,CAAzD,QAAyD,GAAnC,CAAtB,CAEA,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,iBAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,UAAU,CADZ,IAAA,CAEE,kBAAkB,CAFpB,SAAA,CAAA,CAAA,aAAA,CAAA,CAIE,KAAK,CAJP,aAAA,CAKE,GAAG,CALL,GAAA,CAME,IAAI,CANN,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CADF,CACE,CAAA,CAAA,CAAA,CADF,CAVF,CAAA,C,aAsBe,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,OAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { getColor } from '../../../theme';\nimport type { ISpinnerProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useTheme } from '../../../hooks';\n\nconst Spinner = (props: ISpinnerProps, ref: any) => {\n  const { color, size, ...resolvedProps } = usePropsResolution(\n    'Spinner',\n    props\n  );\n  const resolvedColor = getColor(color, useTheme().colors, useTheme());\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ActivityIndicator\n      accessible\n      accessibilityLabel=\"loading\"\n      {...resolvedProps}\n      color={resolvedColor}\n      ref={ref}\n      size={size}\n    />\n  );\n};\n\nexport default memo(forwardRef(Spinner));\nexport type { ISpinnerProps };\n"]},"metadata":{},"sourceType":"script"}