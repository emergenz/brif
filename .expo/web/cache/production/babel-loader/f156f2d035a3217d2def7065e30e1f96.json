{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.ScrollView=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _hooks=require(\"../../../hooks\");var _styled=require(\"../../../utils/styled\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/basic/ScrollView/ScrollView.tsx\";var StyledScrollView=(0,_styled.makeStyledComponent)(_reactNative.ScrollView);var ScrollView=(0,_react.forwardRef)(function(props,ref){var _usePropsResolution=(0,_hooks.usePropsResolution)('ScrollView',props,{}),_contentContainerStyle=_usePropsResolution._contentContainerStyle,contentContainerStyle=_usePropsResolution.contentContainerStyle,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"_contentContainerStyle\",\"contentContainerStyle\"]);var resolved_ContentContainerStyle=(0,_hooks.useStyledSystemPropsResolver)(_contentContainerStyle||{});if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(StyledScrollView,(0,_extends2.default)({},resolvedProps,{contentContainerStyle:contentContainerStyle||resolved_ContentContainerStyle,ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:27,columnNumber:5}}));});exports.ScrollView=ScrollView;","map":{"version":3,"sources":["ScrollView.tsx"],"names":["StyledScrollView","RNScrollView","ScrollView","_contentContainerStyle","contentContainerStyle","resolvedProps","resolved_ContentContainerStyle"],"mappings":"2bAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,C,wDAEA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CAIA,GAAA,CAAA,OAAA,CAAA,OAAA,yBAAA,CAEA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,sIAEA,GAAMA,CAAAA,gBAAqB,CAAG,CAAA,EAAA,OAAA,CAAA,mBAAA,EAAoBC,YAAAA,CAAlD,UAA8B,CAA9B,CAEO,GAAMC,CAAAA,UAAU,CAAG,CAAA,EAAA,MAAA,CAAA,UAAA,EAAW,SAAA,KAAA,CAAA,GAAA,CAAuC,CAAA,GAAA,CAAA,mBAAA,CAKtE,CAAA,EAAA,MAAA,CAAA,kBAAA,EAAA,YAAA,CAAA,KAAA,CALsE,EAKtE,CALsE,CAExEC,sBAFwE,CAAA,mBAAA,CAAA,sBAAA,CAGxEC,qBAHwE,CAAA,mBAAA,CAAA,qBAAA,CAIrEC,aAJqE,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,wBAAA,CAAA,uBAAA,CAAA,CAAA,CAM1E,GAAMC,CAAAA,8BAA8B,CAAG,CAAA,EAAA,MAAA,CAAA,4BAAA,EACrCH,sBAAsB,EADxB,EAAuC,CAAvC,CAIA,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,aAAA,CAAA,CAEE,qBAAqB,CACnBC,qBAAqB,EAHzB,8BAAA,CAKE,GAAG,CALL,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CADF,CACE,CAAA,CAAA,CAAA,CADF,CAbK,CAAmB,CAAnB,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport { ScrollView as RNScrollView } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IScrollViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledScrollView: any = makeStyledComponent(RNScrollView);\n\nexport const ScrollView = forwardRef((props: IScrollViewProps, ref: any) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('ScrollView', props, {});\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledScrollView\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"script"}