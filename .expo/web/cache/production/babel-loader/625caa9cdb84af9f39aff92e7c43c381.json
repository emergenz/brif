{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Button=require(\"../../primitives/Button\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _overlays=require(\"@react-native-aria/overlays\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Fab/Fab.tsx\";var Fab=function Fab(props,ref){var themeProps=(0,_useThemeProps.usePropsResolution)('FAB',props);var label=themeProps.label,icon=themeProps.icon,renderInPortal=themeProps.renderInPortal,placement=themeProps.placement,placementProps=themeProps.placementProps,newProps=(0,_objectWithoutProperties2.default)(themeProps,[\"label\",\"icon\",\"renderInPortal\",\"placement\",\"placementProps\"]);var fabComponent=_react.default.createElement(_Button.Button,(0,_extends2.default)({},placementProps[placement],{ref:ref,startIcon:icon},newProps,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:20,columnNumber:5}}),label);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return renderInPortal?_react.default.createElement(_overlays.OverlayContainer,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:35,columnNumber:5}},fabComponent):fabComponent;};var _default=(0,_react.memo)((0,_react.forwardRef)(Fab));exports.default=_default;","map":{"version":3,"sources":["Fab.tsx"],"names":["Fab","themeProps","label","icon","renderInPortal","placement","placementProps","newProps","fabComponent"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,OAAA,2BAAA,CAEA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CACA,GAAA,CAAA,SAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CACA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,6HAEA,GAAMA,CAAAA,GAAG,CAAHA,QAAAA,CAAAA,GAAAA,CAAM,KAANA,CAAM,GAANA,CAAsC,CAC1C,GAAMC,CAAAA,UAAU,CAAG,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,KAAA,CAAnB,KAAmB,CAAnB,CAD0C,GAGxCC,CAAAA,KAHwC,CAStCD,UATsC,CAAA,KAAA,CAIxCE,IAJwC,CAStCF,UATsC,CAAA,IAAA,CAKxCG,cALwC,CAStCH,UATsC,CAAA,cAAA,CAMxCI,SANwC,CAStCJ,UATsC,CAAA,SAAA,CAOxCK,cAPwC,CAStCL,UATsC,CAAA,cAAA,CAQrCM,QARqC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,UAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,CAAA,CAW1C,GAAMC,CAAAA,YAAY,CAChB,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CACMF,cAAc,CADpB,SACoB,CADpB,CAAA,CAEE,GAAG,CAFL,GAAA,CAGE,SAAS,CAHX,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CADF,KACE,CADF,CAWA,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAGF,OAAOF,CAAAA,cAAc,CACnB,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,SAAA,CAAD,gBAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CADmB,YACnB,CADmB,CAArB,YAAA,CA1BF,CAAA,C,aAiCe,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,GAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Button } from '../../primitives/Button';\nimport type { IFabProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Fab = (props: IFabProps, ref: any) => {\n  const themeProps = usePropsResolution('FAB', props);\n  const {\n    label,\n    icon,\n    renderInPortal,\n    placement,\n    placementProps,\n    ...newProps\n  } = themeProps;\n\n  const fabComponent = (\n    <Button\n      {...placementProps[placement]}\n      ref={ref}\n      startIcon={icon}\n      {...newProps}\n    >\n      {label}\n    </Button>\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return renderInPortal ? (\n    <OverlayContainer>{fabComponent}</OverlayContainer>\n  ) : (\n    fabComponent\n  );\n};\n\nexport default memo(forwardRef(Fab));\n"]},"metadata":{},"sourceType":"script"}