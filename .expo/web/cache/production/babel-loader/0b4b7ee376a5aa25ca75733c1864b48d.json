{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.useResponsiveSSRProps=useResponsiveSSRProps;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=require(\"react\");var _useTheme=require(\"../hooks/useTheme\");var _NativeBaseContext=require(\"../core/NativeBaseContext\");var _tools=require(\"../theme/tools\");function useResponsiveSSRProps(incomingProps){var _useState=(0,_react.useState)(false),_useState2=(0,_slicedToArray2.default)(_useState,2),modified=_useState2[0],setModified=_useState2[1];var theme=(0,_useTheme.useTheme)();var responsivePropsExists=(0,_tools.isResponsiveAnyProp)(incomingProps,theme);var isSSR=(0,_NativeBaseContext.useNativeBaseConfig)('useBreakpointResolvedProps').isSSR;var modifiedProps=incomingProps;if(responsivePropsExists&&isSSR&&!modified){modifiedProps=(0,_extends2.default)({},modifiedProps,{key:Math.random()});}(0,_react.useEffect)(function(){if(responsivePropsExists&&isSSR){setModified(true);}},[responsivePropsExists,isSSR]);return modifiedProps;}","map":{"version":3,"sources":["useResponsiveSSRProps.ts"],"names":["modified","setModified","theme","responsivePropsExists","isSSR","modifiedProps","key","Math"],"mappings":"4WAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CACA,GAAA,CAAA,SAAA,CAAA,OAAA,qBAAA,CACA,GAAA,CAAA,kBAAA,CAAA,OAAA,6BAAA,CACA,GAAA,CAAA,MAAA,CAAA,OAAA,kBAAA,CAEO,QAAA,CAAA,qBAAA,CAAA,aAAA,CAAmD,CAAA,GAAA,CAAA,SAAA,CACxB,CAAA,EAAA,MAAA,CAAA,QAAA,EADwB,KACxB,CADwB,CAAA,UAAA,CAAA,CAAA,EAAA,eAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA,CAAA,CACjDA,QADiD,CAAA,UAAA,CAAA,CAAA,CAAA,CACvCC,WADuC,CAAA,UAAA,CAAA,CAAA,CAAA,CAExD,GAAMC,CAAAA,KAAK,CAAG,CAAA,EAAA,SAAA,CAAd,QAAc,GAAd,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,CAAA,EAAA,MAAA,CAAA,mBAAA,EAAA,aAAA,CAA9B,KAA8B,CAA9B,CACA,GAAMC,CAAAA,KAAK,CAAG,CAAA,EAAA,kBAAA,CAAA,mBAAA,EAAA,4BAAA,EAAd,KAAA,CAEA,GAAIC,CAAAA,aAAa,CAAjB,aAAA,CACA,GAAIF,qBAAqB,EAArBA,KAAAA,EAAkC,CAAtC,QAAA,CAAiD,CAC/CE,aAAa,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,aAAA,CAAA,CAAuBC,GAAG,CAAEC,IAAI,CAA7CF,MAAyCE,EAA5B,CAAA,CAAbF,CAEF,EAAA,EAAA,MAAA,CAAA,SAAA,EAAU,UAAW,CACnB,GAAIF,qBAAqB,EAAzB,KAAA,CAAoC,CAClCF,WAAW,CAAXA,IAAW,CAAXA,CAEH,CAJD,CAAA,CAIG,CAAA,qBAAA,CAJH,KAIG,CAJH,EAMA,MAAA,CAAA,aAAA,CACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../theme/tools';\n\nexport function useResponsiveSSRProps(incomingProps: any) {\n  const [modified, setModified] = useState(false);\n  const theme = useTheme();\n\n  const responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n\n  let modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = { ...modifiedProps, key: Math.random() };\n  }\n  useEffect((): any => {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n\n  return modifiedProps;\n}\n"]},"metadata":{},"sourceType":"script"}