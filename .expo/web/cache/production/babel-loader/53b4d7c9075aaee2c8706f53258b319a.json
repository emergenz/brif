{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _Context=require(\"./Context\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Alert/Alert.tsx\";var Alert=function Alert(_ref,ref){var children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\"]);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Alert',props),status=_usePropsResolution.status,variant=_usePropsResolution.variant,_icon=_usePropsResolution._icon,colorScheme=_usePropsResolution.colorScheme,newProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"status\",\"variant\",\"_icon\",\"colorScheme\"]);if((0,_useHasResponsiveProps.useHasResponsiveProps)(props)){return null;}return _react.default.createElement(_Context.AlertContext.Provider,{value:{status:status,variant:variant,_icon:_icon,colorScheme:colorScheme},__self:_this,__source:{fileName:_jsxFileName,lineNumber:22,columnNumber:5}},_react.default.createElement(_Box.default,(0,_extends2.default)({},newProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:30,columnNumber:7}}),children));};var _default=(0,_react.memo)((0,_react.forwardRef)(Alert));exports.default=_default;","map":{"version":3,"sources":["Alert.tsx"],"names":["Alert","children","props","status","variant","_icon","colorScheme","newProps"],"mappings":"wbAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA,CAEA,GAAA,CAAA,cAAA,CAAA,OAAA,gCAAA,CAEA,GAAA,CAAA,QAAA,CAAA,OAAA,aAAA,CACA,GAAA,CAAA,sBAAA,CAAA,OAAA,wCAAA,C,iIAEA,GAAMA,CAAAA,KAAK,CAALA,QAAAA,CAAAA,KAAAA,CAAQ,IAARA,CAAQ,GAARA,CAA4D,CAAjDC,GAAAA,CAAAA,QAAiD,CAAA,IAAA,CAAjDA,QAAAA,CAAaC,KAAoC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,UAAA,CAAA,CAAjDD,CAAiD,GAAA,CAAA,mBAAA,CAO5D,CAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,OAAA,CAP4D,KAO5D,CAP4D,CAE9DE,MAF8D,CAAA,mBAAA,CAAA,MAAA,CAG9DC,OAH8D,CAAA,mBAAA,CAAA,OAAA,CAI9DC,KAJ8D,CAAA,mBAAA,CAAA,KAAA,CAK9DC,WAL8D,CAAA,mBAAA,CAAA,WAAA,CAM3DC,QAN2D,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,mBAAA,CAAA,CAAA,QAAA,CAAA,SAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA,CAShE,GAAI,CAAA,EAAA,sBAAA,CAAA,qBAAA,EAAJ,KAAI,CAAJ,CAAkC,CAChC,MAAA,KAAA,CAEF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAD,YAAC,CAAD,QAAA,CAAA,CACE,KAAK,CAAE,CACLJ,MAAM,CADD,MAAA,CAELC,OAAO,CAFF,OAAA,CAGLC,KAAK,CAHA,KAAA,CAILC,WAAW,CALf,WACS,CADT,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAQE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,IAAA,CAAD,OAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,EAAA,CAAA,QAAA,CAAA,CAAmB,GAAG,CAAtB,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CATJ,QASI,CARF,CADF,CAZF,CAAA,C,aA4Be,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,KAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\n// import { HStack } from '../../primitives/Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAlertProps } from './types';\nimport { AlertContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Alert = ({ children, ...props }: IAlertProps, ref?: any) => {\n  const {\n    status,\n    variant,\n    _icon,\n    colorScheme,\n    ...newProps\n  } = usePropsResolution('Alert', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <AlertContext.Provider\n      value={{\n        status,\n        variant,\n        _icon,\n        colorScheme,\n      }}\n    >\n      <Box {...newProps} ref={ref}>\n        {children}\n      </Box>\n    </AlertContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(Alert));\n"]},"metadata":{},"sourceType":"script"}