{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _hooks=require(\"../../../hooks\");var _Stack=require(\"../../primitives/Stack\");var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _Skeleton=_interopRequireDefault(require(\"./Skeleton\"));var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Skeleton/SkeletonText.tsx\";var SkeletonText=function SkeletonText(_ref,ref){var children=_ref.children,props=(0,_objectWithoutProperties2.default)(_ref,[\"children\"]);var _usePropsResolution=(0,_hooks.usePropsResolution)('SkeletonText',props),space=_usePropsResolution.space,lineHeight=_usePropsResolution.lineHeight,startColor=_usePropsResolution.startColor,endColor=_usePropsResolution.endColor,_stack=_usePropsResolution._stack,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"space\",\"lineHeight\",\"startColor\",\"endColor\",\"_stack\"]);var computedChildren=[];for(var i=0;i<resolvedProps.noOfLines;i++){if(i===resolvedProps.noOfLines-1&&resolvedProps.noOfLines!==1){computedChildren.push(_react.default.createElement(_Skeleton.default,{borderRadius:resolvedProps.borderRadius?resolvedProps.borderRadius:3,endColor:endColor,startColor:startColor,h:lineHeight,w:\"75%\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:30,columnNumber:9}}));}else computedChildren.push(_react.default.createElement(_Skeleton.default,{borderRadius:resolvedProps.borderRadius?resolvedProps.borderRadius:3,endColor:endColor,startColor:startColor,h:lineHeight,__self:_this,__source:{fileName:_jsxFileName,lineNumber:42,columnNumber:9}}));}return resolvedProps.isLoaded?children:_react.default.createElement(_Box.default,(0,_extends2.default)({borderRadius:resolvedProps.borderRadius?resolvedProps.borderRadius:3,bg:'transparent'},resolvedProps,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:55,columnNumber:5}}),_react.default.createElement(_Stack.VStack,(0,_extends2.default)({top:0,left:0,right:0,bottom:0,position:\"absolute\",justifyContent:space===undefined?'space-between':'flex-start',space:space},_stack,{overflow:\"hidden\",__self:_this,__source:{fileName:_jsxFileName,lineNumber:62,columnNumber:7}}),computedChildren),children?_react.default.createElement(_Box.default,{opacity:0,__self:_this,__source:{fileName:_jsxFileName,lineNumber:76,columnNumber:19}},children):null);};var _default=(0,_react.memo)((0,_react.forwardRef)(SkeletonText));exports.default=_default;","map":{"version":3,"sources":["SkeletonText.tsx"],"names":["SkeletonText","children","props","space","lineHeight","startColor","endColor","_stack","resolvedProps","computedChildren","i"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { VStack } from '../../primitives/Stack';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport Skeleton from './Skeleton';\nimport type { ISkeletonTextProps } from './types';\n\nconst SkeletonText = (\n  //@ts-ignore\n  { children, ...props }: IBoxProps & ISkeletonTextProps,\n  ref: any\n) => {\n  // const { children, ...props } = allProps;\n  const {\n    space,\n    lineHeight,\n    startColor,\n    endColor,\n    _stack,\n    ...resolvedProps\n  } = usePropsResolution('SkeletonText', props);\n\n  const computedChildren = [];\n  //generating an array of skeleton components (same length as noOfLines)\n  for (let i = 0; i < resolvedProps.noOfLines; i++) {\n    //check for last line (to change the width of last line)\n    if (i === resolvedProps.noOfLines - 1 && resolvedProps.noOfLines !== 1) {\n      computedChildren.push(\n        //Using Skeleton component with required props\n        <Skeleton\n          borderRadius={\n            resolvedProps.borderRadius ? resolvedProps.borderRadius : 3\n          }\n          endColor={endColor}\n          startColor={startColor}\n          h={lineHeight}\n          w=\"75%\"\n        />\n      );\n    } else\n      computedChildren.push(\n        <Skeleton\n          borderRadius={\n            resolvedProps.borderRadius ? resolvedProps.borderRadius : 3\n          }\n          endColor={endColor}\n          startColor={startColor}\n          h={lineHeight}\n        />\n      );\n  }\n  return resolvedProps.isLoaded ? (\n    children\n  ) : (\n    <Box\n      borderRadius={resolvedProps.borderRadius ? resolvedProps.borderRadius : 3}\n      bg={'transparent'}\n      {...resolvedProps}\n      ref={ref}\n    >\n      {/* populating computed children with given space */}\n      <VStack\n        top={0}\n        left={0}\n        right={0}\n        bottom={0}\n        position=\"absolute\"\n        justifyContent={space === undefined ? 'space-between' : 'flex-start'}\n        space={space}\n        // spreading props specific for VStack\n        {..._stack}\n        overflow=\"hidden\"\n      >\n        {computedChildren}\n      </VStack>\n      {children ? <Box opacity={0}>{children}</Box> : null}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(SkeletonText));\n"]},"metadata":{},"sourceType":"script"}