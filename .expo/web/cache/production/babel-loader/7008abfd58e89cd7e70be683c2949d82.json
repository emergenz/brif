{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _hooks=require(\"../../../hooks\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _interactions=require(\"@react-native-aria/interactions\");var _utils=require(\"../../../utils\");var _styled=require(\"../../../utils/styled\");var _useResolvedFontFamily=require(\"../../../hooks/useResolvedFontFamily\");var _useHasResponsiveProps=require(\"../../../hooks/useHasResponsiveProps\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Input/InputBase.tsx\";var StyledInput=(0,_styled.makeStyledComponent)(_reactNative.TextInput);var InputBase=function InputBase(_ref2,ref){var _onKeyPress=_ref2.onKeyPress,_onFocus=_ref2.onFocus,_onBlur=_ref2.onBlur,disableFocusHandling=_ref2.disableFocusHandling,inputProps=_ref2.inputProps,wrapperRef=_ref2.wrapperRef,props=(0,_objectWithoutProperties2.default)(_ref2,[\"onKeyPress\",\"onFocus\",\"onBlur\",\"disableFocusHandling\",\"inputProps\",\"wrapperRef\"]);var _React$useState=_react.default.useState(false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),isFocused=_React$useState2[0],setIsFocused=_React$useState2[1];var handleFocus=function handleFocus(focusState,callback){!disableFocusHandling&&setIsFocused(focusState);callback();};var inputThemeProps={isDisabled:inputProps.disabled,isInvalid:inputProps.accessibilityInvalid,isReadOnly:inputProps.accessibilityReadOnly,isRequired:inputProps.required};var _ref=_react.default.useRef(null);var _useHover=(0,_interactions.useHover)({},_ref),isHovered=_useHover.isHovered;var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Input',(0,_extends2.default)({},inputThemeProps,props),{isDisabled:inputThemeProps.isDisabled,isHovered:isHovered,isFocused:isFocused,isInvalid:inputThemeProps.isInvalid,isReadOnly:inputThemeProps.isReadOnly}),isFullWidth=_usePropsResolution.isFullWidth,isDisabled=_usePropsResolution.isDisabled,isReadOnly=_usePropsResolution.isReadOnly,ariaLabel=_usePropsResolution.ariaLabel,accessibilityLabel=_usePropsResolution.accessibilityLabel,placeholderTextColor=_usePropsResolution.placeholderTextColor,selectionColor=_usePropsResolution.selectionColor,underlineColorAndroid=_usePropsResolution.underlineColorAndroid,type=_usePropsResolution.type,fontFamily=_usePropsResolution.fontFamily,fontWeight=_usePropsResolution.fontWeight,fontStyle=_usePropsResolution.fontStyle,resolvedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"isFullWidth\",\"isDisabled\",\"isReadOnly\",\"ariaLabel\",\"accessibilityLabel\",\"placeholderTextColor\",\"selectionColor\",\"underlineColorAndroid\",\"type\",\"fontFamily\",\"fontWeight\",\"fontStyle\"]);var resolvedFontFamily=(0,_useResolvedFontFamily.useResolvedFontFamily)({fontFamily:fontFamily,fontWeight:fontWeight,fontStyle:fontStyle});var resolvedPlaceholderTextColor=(0,_hooks.useToken)('colors',placeholderTextColor);var resolvedSelectionColor=(0,_hooks.useToken)('colors',selectionColor);var resolvedUnderlineColorAndroid=(0,_hooks.useToken)('colors',underlineColorAndroid);if((0,_useHasResponsiveProps.useHasResponsiveProps)((0,_extends2.default)({},props,{onKeyPress:_onKeyPress,onFocus:_onFocus,onBlur:_onBlur,disableFocusHandling:disableFocusHandling,inputProps:inputProps}))){return null;}return _react.default.createElement(StyledInput,(0,_extends2.default)({},inputProps,resolvedFontFamily,{secureTextEntry:type==='password',accessible:true,accessibilityLabel:ariaLabel||accessibilityLabel,editable:isDisabled||isReadOnly?false:true,w:isFullWidth?'100%':undefined},resolvedProps,{placeholderTextColor:resolvedPlaceholderTextColor,selectionColor:resolvedSelectionColor,underlineColorAndroid:resolvedUnderlineColorAndroid,onKeyPress:function onKeyPress(e){e.persist();_onKeyPress&&_onKeyPress(e);},onFocus:function onFocus(e){handleFocus(true,_onFocus?function(){return _onFocus(e);}:function(){});},onBlur:function onBlur(e){handleFocus(false,_onBlur?function(){return _onBlur(e);}:function(){});}},_reactNative.Platform.OS==='web'?{disabled:isDisabled,cursor:isDisabled?'not-allowed':'auto'}:{},{ref:(0,_utils.mergeRefs)([ref,_ref,wrapperRef]),__self:_this,__source:{fileName:_jsxFileName,lineNumber:99,columnNumber:5}}));};var _default=(0,_react.memo)((0,_react.forwardRef)(InputBase));exports.default=_default;","map":{"version":3,"sources":["InputBase.tsx"],"names":["StyledInput","TextInput","InputBase","onKeyPress","onFocus","onBlur","disableFocusHandling","inputProps","wrapperRef","props","isFocused","setIsFocused","React","handleFocus","callback","inputThemeProps","isDisabled","isInvalid","isReadOnly","isRequired","_ref","isHovered","isFullWidth","ariaLabel","accessibilityLabel","placeholderTextColor","selectionColor","underlineColorAndroid","type","fontFamily","fontWeight","fontStyle","resolvedProps","resolvedFontFamily","resolvedPlaceholderTextColor","resolvedSelectionColor","resolvedUnderlineColorAndroid","e","Platform","disabled","cursor"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { TextInput, Platform } from 'react-native';\nimport type { IInputProps } from './types';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst InputBase = (\n  {\n    onKeyPress,\n    onFocus,\n    onBlur,\n    disableFocusHandling,\n    inputProps,\n    wrapperRef,\n    ...props\n  }: IInputProps & {\n    disableFocusHandling?: boolean;\n    inputProps: any;\n  },\n  ref: any\n) => {\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    !disableFocusHandling && setIsFocused(focusState);\n    callback();\n  };\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const {\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    ariaLabel,\n    accessibilityLabel,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    type,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered,\n      isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight,\n    fontStyle,\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n  //TODO: refactor for responsive prop\n  if (\n    useHasResponsiveProps({\n      ...props,\n      onKeyPress,\n      onFocus,\n      onBlur,\n      disableFocusHandling,\n      inputProps,\n    })\n  ) {\n    return null;\n  }\n  return (\n    <StyledInput\n      {...inputProps}\n      {...resolvedFontFamily}\n      secureTextEntry={type === 'password'}\n      accessible\n      accessibilityLabel={ariaLabel || accessibilityLabel}\n      editable={isDisabled || isReadOnly ? false : true}\n      w={isFullWidth ? '100%' : undefined}\n      {...resolvedProps}\n      placeholderTextColor={resolvedPlaceholderTextColor}\n      selectionColor={resolvedSelectionColor}\n      underlineColorAndroid={resolvedUnderlineColorAndroid}\n      onKeyPress={(e: any) => {\n        e.persist();\n        onKeyPress && onKeyPress(e);\n      }}\n      onFocus={(e: any) => {\n        handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n      }}\n      onBlur={(e: any) => {\n        handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n      }}\n      // TODO: this can be moved to baseStyle using _web\n      {...(Platform.OS === 'web'\n        ? {\n            disabled: isDisabled,\n            cursor: isDisabled ? 'not-allowed' : 'auto',\n          }\n        : {})}\n      ref={mergeRefs([ref, _ref, wrapperRef])}\n    />\n  );\n};\n\nexport default memo(forwardRef(InputBase));\n"]},"metadata":{},"sourceType":"script"}