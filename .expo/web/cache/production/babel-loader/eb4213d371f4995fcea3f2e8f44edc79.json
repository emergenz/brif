{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _Box=_interopRequireDefault(require(\"../../primitives/Box\"));var _Text=_interopRequireDefault(require(\"../../primitives/Text\"));var _useFormControl=require(\"./useFormControl\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _utils=require(\"../../../utils\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/FormControl/FormControlLabel.tsx\";var FormControlLabel=function FormControlLabel(_ref2,ref){var children=_ref2.children,props=(0,_objectWithoutProperties2.default)(_ref2,[\"children\"]);var formControlContext=(0,_useFormControl.useFormControlContext)();var combinedProps=(0,_utils.combineContextAndProps)(formControlContext,props);var _ref=_react.default.useRef(null);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('FormControlLabel',combinedProps,{isDisabled:combinedProps.isDisabled,isReadOnly:combinedProps.isReadOnly,isInvalid:combinedProps.isInvalid}),astrickColor=_usePropsResolution.astrickColor,reslovedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"astrickColor\"]);var requiredAsterisk=function requiredAsterisk(){return _react.default.createElement(_Text.default,{_web:{accessibilityHidden:true,accessibilityRole:'presentation'},color:astrickColor,__self:_this,__source:{fileName:_jsxFileName,lineNumber:29,columnNumber:5}},\"*\");};var mergedRef=(0,_utils.mergeRefs)([_ref,ref]);_react.default.useEffect(function(){if(_ref.current){if(props.htmlFor){_ref.current.htmlFor=props.htmlFor;}else if(reslovedProps!=null&&reslovedProps.nativeID){_ref.current.htmlFor=reslovedProps.nativeID;}}},[reslovedProps==null?void 0:reslovedProps.nativeID,props.htmlFor]);return _react.default.createElement(_Box.default,(0,_extends2.default)({flexDirection:\"row\",justifyContent:\"flex-start\",_web:{accessibilityRole:'label'}},reslovedProps,{nativeID:reslovedProps==null?void 0:reslovedProps.labelId,ref:mergedRef,__self:_this,__source:{fileName:_jsxFileName,lineNumber:53,columnNumber:5}}),children,(reslovedProps==null?void 0:reslovedProps.isRequired)&&requiredAsterisk());};var _default=(0,_react.memo)((0,_react.forwardRef)(FormControlLabel));exports.default=_default;","map":{"version":3,"sources":["FormControlLabel.tsx"],"names":["FormControlLabel","children","props","formControlContext","combinedProps","_ref","React","astrickColor","reslovedProps","isDisabled","isReadOnly","isInvalid","requiredAsterisk","accessibilityHidden","accessibilityRole","mergedRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport Text from '../../primitives/Text';\nimport { useFormControlContext } from './useFormControl';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IFormControlLabelProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { combineContextAndProps } from '../../../utils';\n\nconst FormControlLabel = (\n  { children, ...props }: IFormControlLabelProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n  const _ref = React.useRef<HTMLLabelElement>(null);\n  const { astrickColor, ...reslovedProps } = usePropsResolution(\n    'FormControlLabel',\n    combinedProps,\n    {\n      isDisabled: combinedProps.isDisabled,\n      isReadOnly: combinedProps.isReadOnly,\n      isInvalid: combinedProps.isInvalid,\n      // isRequired: combinedProps.isRequired,\n    }\n  );\n\n  const requiredAsterisk = () => (\n    <Text\n      _web={{\n        accessibilityHidden: true,\n        //@ts-ignore\n        accessibilityRole: 'presentation',\n      }}\n      color={astrickColor}\n    >\n      *\n    </Text>\n  );\n  const mergedRef = mergeRefs([_ref, ref]);\n  React.useEffect(() => {\n    if (_ref.current) {\n      // RN web doesn't support htmlFor for Label element yet\n      if (props.htmlFor) {\n        _ref.current.htmlFor = props.htmlFor;\n      } else if (reslovedProps?.nativeID) {\n        _ref.current.htmlFor = reslovedProps.nativeID;\n      }\n    }\n  }, [reslovedProps?.nativeID, props.htmlFor]);\n\n  return (\n    <Box\n      flexDirection=\"row\"\n      justifyContent=\"flex-start\"\n      _web={{\n        //@ts-ignore\n        accessibilityRole: 'label',\n      }}\n      {...reslovedProps}\n      nativeID={reslovedProps?.labelId}\n      ref={mergedRef}\n    >\n      {children}\n      {reslovedProps?.isRequired && requiredAsterisk()}\n    </Box>\n  );\n};\nexport default memo(forwardRef(FormControlLabel));\n"]},"metadata":{},"sourceType":"script"}