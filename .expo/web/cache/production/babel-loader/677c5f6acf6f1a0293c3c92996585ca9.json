{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.Input=void 0;var _tools=require(\"../tools\");var _reactNative=require(\"react-native-web/dist/index\");function getSelectionColor(props){if(_reactNative.Platform.OS==='ios'){return(0,_tools.mode)('coolGray.800','warmGray.50')(props);}else if(_reactNative.Platform.OS==='android'){return(0,_tools.mode)('coolGray.800','warmGray.50')(props);}}var baseStyle=function baseStyle(props){return{selectionColor:getSelectionColor(props),fontFamily:'body',p:'2',borderRadius:'sm',color:(0,_tools.mode)('coolGray.800','warmGray.50')(props),placeholderTextColor:'muted.400',background:'transparent',borderColor:(0,_tools.mode)('muted.200','gray.500')(props),_disabled:{opacity:'80',bg:(0,_tools.mode)('muted.100','muted.700')(props)},_invalid:{borderColor:(0,_tools.mode)('danger.600','danger.300')(props)},_focus:{borderColor:(0,_tools.mode)('primary.400','primary.500')(props)},_web:{outlineWidth:'0',lineHeight:'lg'}};};function roundedStyle(props){return{borderRadius:'25',borderWidth:'1',_hover:{bg:(0,_tools.mode)('gray.100','gray.700')(props)}};}function outlineStyle(props){return{borderWidth:'1',_hover:{bg:(0,_tools.mode)('gray.100','gray.700')(props)}};}function filledStyle(props){return{bg:props.bg||(0,_tools.mode)('muted.200','muted.600')(props),borderWidth:'1',borderColor:'transparent',_hover:{bg:(0,_tools.mode)('muted.300','muted.700')(props)}};}function unstyledStyle(){return{borderWidth:'0'};}function underlinedStyle(){return{borderRadius:'0',borderBottomWidth:'1'};}var variants={outline:outlineStyle,underlined:underlinedStyle,rounded:roundedStyle,filled:filledStyle,unstyled:unstyledStyle};var sizes={'2xl':{fontSize:'xl'},'xl':{fontSize:'lg'},'lg':{fontSize:'md'},'md':{fontSize:'sm'},'sm':{fontSize:'xs'},'xs':{fontSize:'2xs'}};var defaultProps={size:'sm',variant:'outline'};var Input={baseStyle:baseStyle,defaultProps:defaultProps,variants:variants,sizes:sizes};exports.Input=Input;var _default={};exports.default=_default;","map":{"version":3,"sources":["input.ts"],"names":["Platform","baseStyle","selectionColor","getSelectionColor","fontFamily","p","borderRadius","color","placeholderTextColor","background","borderColor","_disabled","opacity","bg","_invalid","_focus","_web","outlineWidth","lineHeight","borderWidth","_hover","props","borderBottomWidth","variants","outline","underlined","rounded","filled","unstyled","sizes","fontSize","defaultProps","size","variant","Input"],"mappings":"8FAAA,GAAA,CAAA,MAAA,CAAA,OAAA,YAAA,C,wDAGA,QAAA,CAAA,iBAAA,CAAA,KAAA,CAAuD,CACrD,GAAIA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAJ,KAAA,CAA2B,CACzB,MAAO,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,cAAA,CAAA,aAAA,EAAP,KAAO,CAAP,CADF,CAAA,IAEO,IAAIA,YAAAA,CAAAA,QAAAA,CAAAA,EAAAA,GAAJ,SAAA,CAA+B,CACpC,MAAO,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,cAAA,CAAA,aAAA,EAAP,KAAO,CAAP,CAEH,CAED,IAAMC,CAAAA,SAAS,CAATA,QAAAA,CAAAA,SAAAA,CAAY,KAAZA,CAA4C,CAiBhD,MAAO,CACLC,cAAc,CAAEC,iBAAiB,CAD5B,KAC4B,CAD5B,CAELC,UAAU,CAFL,MAAA,CAGLC,CAAC,CAHI,GAAA,CAILC,YAAY,CAJP,IAAA,CAKLC,KAAK,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,cAAA,CAAA,aAAA,EALF,KAKE,CALF,CAMLC,oBAAoB,CANf,WAAA,CAOLC,UAAU,CAPL,aAAA,CAQLC,WAAW,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,WAAA,CAAA,UAAA,EARR,KAQQ,CARR,CASLC,SAAS,CAAE,CACTC,OAAO,CADE,IAAA,CAETC,EAAE,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,WAAA,CAAA,WAAA,EAXD,KAWC,CAFK,CATN,CAaLC,QAAQ,CAAE,CACRJ,WAAW,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,YAAA,CAAA,YAAA,EAdV,KAcU,CADL,CAbL,CAgBLK,MAAM,CAAE,CACNL,WAAW,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,aAAA,CAAA,aAAA,EAjBV,KAiBU,CADP,CAhBH,CAmBLM,IAAI,CAAE,CACJC,YAAY,CADR,GAAA,CAEJC,UAAU,CArBd,IAmBQ,CAnBD,CAAP,CAjBF,CAAA,CA2CA,QAAA,CAAA,YAAA,CAAA,KAAA,CAAkD,CAChD,MAAO,CACLZ,YAAY,CADP,IAAA,CAELa,WAAW,CAFN,GAAA,CAGLC,MAAM,CAAE,CACNP,EAAE,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,UAAA,CAAA,UAAA,EAJR,KAIQ,CADE,CAHH,CAAP,CAQF,SAAA,CAAA,YAAA,CAAA,KAAA,CAAkD,CAChD,MAAO,CACLM,WAAW,CADN,GAAA,CAELC,MAAM,CAAE,CACNP,EAAE,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,UAAA,CAAA,UAAA,EAHR,KAGQ,CADE,CAFH,CAAP,CAOF,SAAA,CAAA,WAAA,CAAA,KAAA,CAAiD,CAC/C,MAAO,CACLA,EAAE,CAAEQ,KAAK,CAALA,EAAAA,EAAY,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,WAAA,CAAA,WAAA,EADX,KACW,CADX,CAELF,WAAW,CAFN,GAAA,CAGLT,WAAW,CAHN,aAAA,CAILU,MAAM,CAAE,CACNP,EAAE,CAAE,CAAA,EAAA,MAAA,CAAA,IAAA,EAAA,WAAA,CAAA,WAAA,EALR,KAKQ,CADE,CAJH,CAAP,CASF,SAAA,CAAA,aAAA,EAAyB,CACvB,MAAO,CACLM,WAAW,CADb,GAAO,CAAP,CAIF,SAAA,CAAA,eAAA,EAA2B,CACzB,MAAO,CACLb,YAAY,CADP,GAAA,CAELgB,iBAAiB,CAFnB,GAAO,CAAP,CAMF,IAAMC,CAAAA,QAAQ,CAAG,CACfC,OAAO,CADQ,YAAA,CAEfC,UAAU,CAFK,eAAA,CAGfC,OAAO,CAHQ,YAAA,CAIfC,MAAM,CAJS,WAAA,CAKfC,QAAQ,CALV,aAAiB,CAAjB,CAQA,GAAMC,CAAAA,KAAK,CAAG,CACZ,MAAO,CAAEC,QAAQ,CADL,IACL,CADK,CAEZ,KAAM,CAAEA,QAAQ,CAFJ,IAEN,CAFM,CAGZ,KAAM,CAAEA,QAAQ,CAHJ,IAGN,CAHM,CAIZ,KAAM,CAAEA,QAAQ,CAJJ,IAIN,CAJM,CAKZ,KAAM,CAAEA,QAAQ,CALJ,IAKN,CALM,CAMZ,KAAM,CAAEA,QAAQ,CANlB,KAMQ,CANM,CAAd,CASA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CADe,IAAA,CAEnBC,OAAO,CAFT,SAAqB,CAArB,CAMO,GAAMC,CAAAA,KAAK,CAAG,CACnBjC,SAAS,CADU,SAAA,CAEnB8B,YAAY,CAFO,YAAA,CAGnBR,QAAQ,CAHW,QAAA,CAInBM,KAAK,CAJA,KAAc,CAAd,C,iCAOQ,E","sourcesContent":["import { mode } from '../tools';\nimport { Platform } from 'react-native';\n\nfunction getSelectionColor(props: Record<string, any>) {\n  if (Platform.OS === 'ios') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  } else if (Platform.OS === 'android') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nconst baseStyle = (props: Record<string, any>) => {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    color: mode('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    background: 'transparent',\n    borderColor: mode('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: mode('muted.100', 'muted.700')(props),\n    },\n    _invalid: {\n      borderColor: mode('danger.600', 'danger.300')(props),\n    },\n    _focus: {\n      borderColor: mode('primary.400', 'primary.500')(props),\n    },\n    _web: {\n      outlineWidth: '0',\n      lineHeight: 'lg', // Todo: Move to _web inside size so that sm and xs don't have this much height\n    },\n  };\n};\n\nfunction roundedStyle(props: Record<string, any>) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props),\n    },\n  };\n}\nfunction outlineStyle(props: Record<string, any>) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props),\n    },\n  };\n}\nfunction filledStyle(props: Record<string, any>) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.700')(props),\n    },\n  };\n}\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0',\n  };\n}\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderBottomWidth: '1',\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle,\n};\n\nconst sizes = {\n  '2xl': { fontSize: 'xl' },\n  'xl': { fontSize: 'lg' },\n  'lg': { fontSize: 'md' },\n  'md': { fontSize: 'sm' },\n  'sm': { fontSize: 'xs' },\n  'xs': { fontSize: '2xs' },\n};\n\nconst defaultProps = {\n  size: 'sm',\n  variant: 'outline',\n};\n\n// Input\nexport const Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes,\n};\n\nexport default {};\n"]},"metadata":{},"sourceType":"script"}