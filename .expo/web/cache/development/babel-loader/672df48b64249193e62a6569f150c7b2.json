{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/maharajamihir/Projects/brif/App.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Box, Divider, Input, Icon, Text, Link, HStack, Center, Heading, Switch, useColorMode, NativeBaseProvider, extendTheme, VStack, Code } from \"native-base\";\nimport NativeBaseIcon from \"./components/NativeBaseIcon\";\nimport { Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { BookContainer } from \"./components/BookContainer\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\"\n};\nexport var theme = extendTheme({\n  config: config\n});\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Center, {\n    _dark: {\n      bg: \"blueGray.900\"\n    },\n    _light: {\n      bg: \"blueGray.50\"\n    },\n    px: 4,\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(VStack, {\n    space: 5,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(NativeBaseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Heading, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Welcome to brif\"), React.createElement(VStack, {\n    space: 5,\n    width: \"100%\",\n    divider: React.createElement(Box, {\n      px: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(VStack, {\n    width: \"100%\",\n    space: 5,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Search\",\n    variant: \"filled\",\n    width: \"100%\",\n    bg: \"gray.100\",\n    borderRadius: \"10\",\n    py: \"1\",\n    px: \"2\",\n    placeholderTextColor: \"gray.500\",\n    _hover: {\n      bg: 'gray.200',\n      borderWidth: 0\n    },\n    borderWidth: \"0\",\n    _web: {\n      _focus: {\n        style: {\n          boxShadow: 'none'\n        }\n      }\n    },\n    color: \"black\",\n    onChangeText: setSearchText,\n    InputLeftElement: React.createElement(Icon, {\n      ml: \"2\",\n      size: \"5\",\n      color: \"gray.500\",\n      as: React.createElement(Ionicons, {\n        name: \"ios-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }))), !searchText ? React.createElement(HStack, {\n    space: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Search for a book to get its summary.\")) : React.createElement(BookContainer, {\n    author: \"Franz\",\n    title: \"The Game of Life\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), React.createElement(ToggleDarkMode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction ToggleDarkMode() {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  return React.createElement(HStack, {\n    space: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Dark\"), React.createElement(Switch, {\n    isChecked: colorMode === \"light\" ? true : false,\n    onToggle: toggleColorMode,\n    \"aria-label\": colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Light\"));\n}\n\nvar wiki = require('wikipedia');","map":{"version":3,"sources":["/home/maharajamihir/Projects/brif/App.js"],"names":["React","useState","Box","Divider","Input","Icon","Text","Link","HStack","Center","Heading","Switch","useColorMode","NativeBaseProvider","extendTheme","VStack","Code","NativeBaseIcon","Ionicons","MaterialIcons","FontAwesome5","BookContainer","config","useSystemColorMode","initialColorMode","theme","App","searchText","setSearchText","bg","borderWidth","_focus","style","boxShadow","ToggleDarkMode","colorMode","toggleColorMode","wiki","require"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View } from 'react-native';\nimport {\n  Box,\n  Divider,\n  Input,\n  Icon,\n  Text,\n  Link,\n  HStack,\n  Center,\n  Heading,\n  Switch,\n  useColorMode,\n  NativeBaseProvider,\n  extendTheme,\n  VStack,\n  Code,\n} from \"native-base\";\nimport NativeBaseIcon from \"./components/NativeBaseIcon\";\nimport { Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { BookContainer } from './components/BookContainer';\n\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\",\n};\n\n// extend the theme\nexport const theme = extendTheme({ config });\n\nexport default function App() {\n  const [searchText, setSearchText] = useState(null);\n  //WikiArticle();\n  return (\n    <NativeBaseProvider>\n      <Center\n        _dark={{ bg: \"blueGray.900\" }}\n        _light={{ bg: \"blueGray.50\" }}\n        px={4}\n        flex={1}\n      >\n        <VStack space={5} alignItems=\"center\">\n          <NativeBaseIcon />\n          <Heading size=\"lg\">Welcome to brif</Heading>\n\n          {/* Search */}\n          <VStack\n            space={5}\n            width=\"100%\"\n            divider={\n              <Box px=\"2\">\n                <Divider />\n              </Box>\n            }>\n            <VStack width=\"100%\" space={5} alignItems=\"center\">\n              <Input\n                placeholder=\"Search\"\n                variant=\"filled\"\n                width=\"100%\"\n                bg=\"gray.100\"\n                borderRadius=\"10\"\n                py=\"1\"\n                px=\"2\"\n                placeholderTextColor=\"gray.500\"\n                _hover={{ bg: 'gray.200', borderWidth: 0 }}\n                borderWidth=\"0\"\n                _web={{\n                  _focus: { style: { boxShadow: 'none' } },\n                }}\n                color=\"black\"\n                onChangeText={setSearchText}\n                InputLeftElement={\n                  <Icon\n                    ml=\"2\"\n                    size=\"5\"\n                    color=\"gray.500\"\n                    as={<Ionicons name=\"ios-search\" />}\n                  />\n                }\n              />\n            </VStack>\n          </VStack>\n\n          {!searchText ?\n            <HStack space={2} alignItems=\"center\">\n              <Text>Search for a book to get its summary.</Text>\n            </HStack>\n            :\n\n            <BookContainer author='Franz' title='The Game of Life' />\n          }\n          <ToggleDarkMode />\n        </VStack>\n      </Center>\n    </NativeBaseProvider>\n  );\n}\n\n// Color Switch Component\nfunction ToggleDarkMode() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <HStack space={2} alignItems=\"center\">\n      <Text>Dark</Text>\n      <Switch\n        isChecked={colorMode === \"light\" ? true : false}\n        onToggle={toggleColorMode}\n        aria-label={\n          colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\"\n        }\n      />\n      <Text>Light</Text>\n    </HStack>\n  );\n}\n\n// Wiki component\nconst wiki = require('wikipedia');\n/*\nconst WikiArticle = () => {\n\ttry {\n\t\tconst summary = await wiki.summary('Batman');\n\t\tconsole.log(summary);\n\t\t//Response of type @wikiSummary - contains the intro and the main image\n\t} catch (error) {\n\t\tconsole.log(error);\n\t\t//=> Typeof wikiError\n\t}\n};*/\n"]},"metadata":{},"sourceType":"module"}